[["amf0decArray", "\nfunction amf0decArray(buf) {\n    var obj = amf0decObject(buf.slice(4));\n    return { len: 5 + obj.len, value: obj.value }\n}\n"], ["subscribeToResult", "\nfunction subscribeToResult(outerSubscriber, result, outerValue, outerIndex) {\n    var destination = new _InnerSubscriber__WEBPACK_IMPORTED_MODULE_0__[\"InnerSubscriber\"](outerSubscriber, outerValue, outerIndex);\n    return Object(_subscribeTo__WEBPACK_IMPORTED_MODULE_1__[\"subscribeTo\"])(result)(destination);\n}\n"], ["_info", "\nfunction _info(stops) {\n    if ( LOG ) {\n      let p = \"\";\n      <createWhiteSpaceBlock>\n      for ( let i = 0; i < segments.length * 2; i++ ) {\n        p = p + \" \";\n      }\n      </createWhiteSpaceBlock>\n\n      <loggingTripInfo>\n      _log(p + \"...Trip \" + trip.id);\n      _log(p + \"   Stop: \" + enter.name + \" @ \" + trip.getStopTime(enter).departure.getTimeReadable());\n      _log(p + \"   Segments: \" + segments.length);\n      _printSegments(segments, p + \"   \");\n      </loggingTripInfo>\n\n      <loggingTransferStops>\n      let stopNames = [];\n      for ( let i = 0; i < stops.length; i++ ) {\n        stopNames.push(stops[i].name);\n      }\n      _log(p + \"   Transfer Stops: \" + stops.length + \" (\" + stopNames.join(', ') + \")\");\n      </loggingTransferStops>\n    }\n  }\n"], ["sort_mx", "\nfunction sort_mx (mx_list) {\n    const sorted = mx_list.sort((a,b) => a.priority - b.priority);\n\n    <randomizeSamePriority>\n    for (let i=0,l=sorted.length-1; i<l; i++) {\n        if (sorted[i].priority === sorted[i+1].priority) {\n            if (Math.round(Math.random())) { \n                const j = sorted[i];\n                sorted[i] = sorted[i+1];\n                sorted[i+1] = j;\n            }\n        }\n    }\n    </randomizeSamePriority>\n    return sorted;\n}\n"], ["createFunction", "\nfunction(name, params, body, context) {\n    var F = context ? context.Function : Function;\n    name = this.safename(name);\n    params = params ? params.join(\",\") : \"\";\n    body = body || \"\";\n    return new F(\n        \"return function \" + name + \" ( \" + params + \" ) {\" + body + \"}\"\n    )();\n}\n"], ["setupUploadAndTTFHandling", "\nfunction() {\n    <initializeFileUpload>\n    var upFile = document.getElementById('upload-file');\n    upFile.addEventListener('change', onUpFileChange);\n    </initializeFileUpload>\n\n    <setupAjaxFileAndRender>\n    ajaxFile({\n        type: 'binary',\n        url: './test/baiduHealth.ttf',\n        onSuccess: function(binaryData) {\n            setFont(binaryData);\n\n            var ttfReander = new ttfreader();\n            var ttfData = ttfReander.read(binaryData);\n            showTTFGlyf(ttfData);\n        },\n        onError: function() {\n            console.error('error read file');\n        }\n    });\n    </setupAjaxFileAndRender>\n\n    <delegateFontListClicks>\n    $('#font-list').delegate('li', 'click', function(e) {\n        $('#font-list li').removeClass('selected');\n        $(this).addClass('selected');\n        showGlyf(+$(this).attr('data-code'));\n    });\n    </delegateFontListClicks>\n}\n"], ["handleTouchEvent", "\nfunction (event, extraData) {\n    if (!this.__validateNbTouches(event)) {\n        return null;\n    }\n    this._disconnectAdditionalTouchEvents();\n    this._connectTouchEvents();\n    <setCurrentData>\n    this.currentData = {\n        positions : ariaTouchEvent.getPositions(event),\n        time : (new Date()).getTime()\n    };\n    </setCurrentData>\n    <handleFakeEvents>\n    if (this._getFakeEventsMap().end) {\n        return this._raiseFakeEvent(event, this._getFakeEventsMap().end, extraData);\n    } else {\n        return (event.returnValue != null) ? event.returnValue : !event.defaultPrevented;\n    }\n    </handleFakeEvents>\n}\n"], ["applyStylesAndWaitForCallback", "\nfunction( elem, options, callback ) {\n    var old = {};\n\n    <saveAndApplyNewStyles>\n    for ( var name in options ) {\n        old[ name ] = elem.style[ name ];\n        elem.style[ name ] = options[ name ];\n    }\n    </saveAndApplyNewStyles>\n\n    callback.call( elem );\n\n    <restoreOldStyles>\n    for ( var name in options ) {\n        elem.style[ name ] = old[ name ];\n    }\n    </restoreOldStyles>\n}\n"], ["updateGapTracking", "\nfunction update(latest) {\n    if (latest === null || latest === undefined) {\n      isGap = true\n      return\n    }\n\n    <checkAndSetIsGap>\n    if (offset >= latest) {\n      return\n    }\n    </checkAndSetIsGap>\n\n    <recordGapAndReset>\n    if (isGap) {\n      gaps.push({start: offset, end: latest})\n      isGap = false\n    }\n    </recordGapAndReset>\n\n    <updateOffset>\n    offset = latest\n    </updateOffset>\n}\n"], ["unloadDependencies", "\nfunction (classpath, dependencies) {\n    if (!dependencies) {\n        return;\n    }\n\n    for (var i = 0, len = dependencies.length; i < len; i += 1) {\n        var cssClasspath = Aria.getClasspath(dependencies[i]);\n        this.__unload(classpath, cssClasspath);\n    }\n}\n"], "```"]