[["reduceProperties", "\nfunction reduceProperties(map, callback, initial) {\n        var result = initial;\n        for (var key in map) {\n            result = callback(result, map[key], String(key));\n        }\n        return result;\n}\n"], ["correctUV", "\nfunction correctUV(uv, vector, azimuth) {\n  if ((azimuth < 0) && (uv.x === 1)) uv = new THREE.Vector2(uv.x - 1, uv.y);\n  if ((vector.x === 0) && (vector.z === 0)) uv = new THREE.Vector2(azimuth / 2 / Math.PI + 0.5, uv.y);\n  return uv.clone();\n}\n"], ["couldContainTypeParameters", "\nfunction couldContainTypeParameters(type) {\n  return !!(\n    type.flags & 16384 ||\n    type.flags & 131072 && ts.forEach(type.typeArguments, couldContainTypeParameters) ||\n    type.flags & 2097152 && type.symbol && type.symbol.flags & (8192 | 2048 | 32) ||\n    type.flags & 1572864 && couldUnionOrIntersectionContainTypeParameters(type)\n  );\n}\n"], ["make", "\nfunction make(code) {\n  try {\n    var jailInitializationCode = LoopStopInjector.inject(code);\n    jailInitializationCode = tryToCoverWindow(jailInitializationCode);\n    var parameters = jailEnvironment.getNames();\n    parameters.push(jailInitializationCode);\n    var f = Function.apply(null, parameters);\n    return new f(jailEnvironment.getValues());\n  } catch (err) {\n    console.error(\"While we were trying to make a jail some problem caused:\", err);\n  }\n}\n"], ["function", "\nfunction(arg) {\n  var navigationInformation = arg.navigationInformation;\n  var direction = navigationInformation.direction;\n  var origin = navigationInformation.origin;\n  var reverse = (direction === 'forward' && origin === 'popup') || (direction === 'backward' && origin === 'browser');\n  if (loop) {\n      reverse = !reverse;\n  }\n  ariaTemplatesNavigationManager.focusFirst(element, reverse);\n}\n"], ["function", "\nfunction (key, array, index, fnEqual) {\n  var idx = Arrays.indexOf(key, array, index, fnEqual);\n  if (idx >= 0)\n      array.splice(idx, 1);\n  return idx;\n}\n"], ["function", "\nfunction (cipherParams) {\n  var ciphertext = cipherParams.ciphertext;\n  var salt = cipherParams.salt;\n  if (salt) {\n      var wordArray = WordArray.create([0x53616c74, 0x65645f5f]).concat(salt).concat(ciphertext);\n  } else {\n      var wordArray = ciphertext;\n  }\n  var openSSLStr = wordArray.toString(Base64);\n  openSSLStr = openSSLStr.replace(/(.{64})/g, '$1\\n');\n  return openSSLStr;\n}\n"], ["mapBoard", "\nfunction mapBoard(board, func) {\n    return board.map(function (col) {\n        return col.map(function (p) {\n            return func(p);\n        });\n    });\n}\n"], ["function", "\nfunction (node, fn) {\n  var count = 0, first = node.firstChild;\n  fn = fn || function () {\n    return 1;\n  };\n  while (first) {\n    if (fn(first)) {\n        count++;\n    }\n    first = first.nextSibling;\n  }\n  return count;\n}\n"], ["combineBuffers", "\nfunction combineBuffers(types, opts) {\n  var size = -1;\n  var i, l, type;\n  for (i = 0, l = types.length; i < l; i++) {\n    type = types[i];\n    if (type.typeName === 'bytes') {\n      return type;\n    }\n    if (size === -1) {\n      size = type.size;\n    } else if (type.size !== size) {\n      size = -2;\n    }\n  }\n  return size < 0 ? Type.forSchema('bytes', opts) : types[0];\n}\n"], ""]