[["fixSet", "\nfunction _fixSet( set ){\n  return (set |\n      (( set & ~~BLEND_FUNC_A_SET   ) >>> 2 ) |\n      (( set & ~~BLEND_EQ_A_SET     ) >>> 2 ) |\n      (( set & ~~STENCIL_B_FUNC_SET ) >>> 3 ) |\n      (( set & ~~STENCIL_B_OP_SET   ) >>> 3 ) |\n      (( set & ~~STENCIL_B_MASK_SET ) >>> 3 )\n    );\n}\n"], ["checkModuleLicense", "\nfunction checkModuleLicense(folder) {\n    var licensePath = folder + \"/LICENSE\",\n        readMePath = folder + \"/README.md\",\n        licenseContent;\n\n    if(fs.existsSync(licensePath)){\n        licenseContent = fs.readFileSync(licensePath, \"utf-8\");\n        return { isMIT : isLicense.mit(licenseContent), content : licenseContent };\n    }\n    \n    else if(fs.existsSync(readMePath)) {\n        licenseContent = fs.readFileSync(readMePath, \"utf-8\");\n        return { isMIT : isLicense.mit(licenseContent), content : \"Check the README\" };\n    }\n    else {\n        return { isMIT : false, content : \"not found\" };\n    }\n}\n"], ["createCopyDescriptors", "\nfunction createCopyDescriptors(obj, deep, template) {\n  const pdc = {};\n  const _tpl = template || { enumerable: true };\n  Object.keys(obj).forEach(key => {\n    const val = obj[key];\n    const valueDesc = { value: { value:  deep ? deepCopy(val, _tpl) : val } };\n    pdc[key] = Object.create(_tpl, valueDesc);\n  });\n  return pdc;\n}\n"], ["isActionAllowedInSignalingState", "\nfunction isActionAllowedInSignalingState(action, type, signalingState) {\n  return {\n    offer: {\n      setLocalDescription: ['stable', 'have-local-offer'],\n      setRemoteDescription: ['stable', 'have-remote-offer']\n    },\n    answer: {\n      setLocalDescription: ['have-remote-offer', 'have-local-pranswer'],\n      setRemoteDescription: ['have-local-offer', 'have-remote-pranswer']\n    }\n  }[type][action].indexOf(signalingState) !== -1;\n}\n"], ["encode5", "\nfunction encode5(n) {\n  assert(0 <= n && n <= 0x3fffffff, ENCODE_OUTOFBOUNDS + n)\n  \n  const lower = isolate(n, 0, 6)\n  const aboveLower = isolate(n, 6, 6)\n  const mid = isolate(n, 12, 6)\n  const belowUpper = isolate(n, 18, 6)\n  const upper = isolate(n, 24, 6)\n  return encode(upper) + encode(belowUpper)\n    + encode(mid) + encode(aboveLower) + encode(lower)\n}\n"], ["definition", "\nfunction definition(node) {\n  var content = uri(node.url)\n\n  if (node.title) {\n    content += space + title(node.title)\n  }\n\n  return (\n    leftSquareBracket +\n    (node.label || node.identifier) +\n    rightSquareBracket +\n    colon +\n    space +\n    content\n  )\n}\n"], ["parseConfigText", "\nfunction(text)\n\t{\n\t\tif (text != null)\n\t\t{\n\t\t\t<splitTextIntoLines>\n\t\t\tvar lines = text.split('\\n');\n\t\t\t</splitTextIntoLines>\n\t\t\t\n\t\t\tfor (var i = 0; i < lines.length; i++)\n\t\t\t{\n\t\t\t\t<skipComments>\n\t\t\t\tif (lines[i].charAt(0) != '#')\n\t\t\t\t</skipComments>\n\t\t\t\t{\n\t\t\t\t\t<parseKeyAndValue>\n\t\t\t\t\tvar index = lines[i].indexOf('=');\n\t\t\t\t\t\n\t\t\t\t\tif (index > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar key = lines[i].substring(0, index);\n\t\t\t\t\t\tvar idx = lines[i].length;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (lines[i].charCodeAt(idx - 1) == 13)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tidx--;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar value = lines[i].substring(index + 1, idx);\n\t\t\t\t\t</parseKeyAndValue>\n\t\t\t\t\t\n\t\t\t\t\t<decodeAndAssignValue>\n\t\t\t\t\tif (this.resourcesEncoded)\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue = value.replace(/\\\\(?=u[a-fA-F\\d]{4})/g,\"%\");\n\t\t\t\t\t\tmxResources.resources[key] = unescape(value);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tmxResources.resources[key] = value;\n\t\t\t\t\t}\n\t\t\t\t\t</decodeAndAssignValue>\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n"], ["previewerInitialization", "\nfunction (type, updater, supportedLanguages, initializer) {\n\t<setupPreviewerInstance>\n\tthis._elt = null;\n\tthis._type = type;\n\tthis._clsRegexp = RegExp('(?:^|\\\\s)' + type + '(?=$|\\\\s)');\n\tthis._token = null;\n\tthis.updater = updater;\n\tthis._mouseout = this.mouseout.bind(this);\n\tthis.initializer = initializer;\n\t</setupPreviewerInstance>\n\n\tvar self = this;\n\n\t<registerSupportedLanguages>\n\tif (!supportedLanguages) {\n\t\tsupportedLanguages = ['*'];\n\t}\n\tif (!Array.isArray(supportedLanguages)) {\n\t\tsupportedLanguages = [supportedLanguages];\n\t}\n\tsupportedLanguages.forEach(function (lang) {\n\t\tif (typeof lang !== 'string') {\n\t\t\tlang = lang.lang;\n\t\t}\n\t\tif (!Previewer.byLanguages[lang]) {\n\t\t\tPreviewer.byLanguages[lang] = [];\n\t\t}\n\t\tif (Previewer.byLanguages[lang].indexOf(self) < 0) {\n\t\t\tPreviewer.byLanguages[lang].push(self);\n\t\t}\n\t});\n\tPreviewer.byType[type] = this;\n\t</registerSupportedLanguages>\n}\n"], ["_onChildNodeCountUpdated", "\nfunction _onChildNodeCountUpdated(event, res) {\n    if (res.nodeId > 0) {\n        Inspector.DOM.requestChildNodes(res.nodeId);\n    }\n}\n"], ["listModification", "\nfunction (index, count) {\n    <validateIndex>\n    validateListIndex(this, index + count - 1);\n    </validateIndex>\n\n    <removeElements>\n    var len = this.length - count;\n\n    for (; index < len; index++) {\n        this[index] = this[index + count];\n    }\n\n    shrinkList(this, len);\n\t</removeElements>\n}\n"], ""]