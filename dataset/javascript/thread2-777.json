[["customNormalizeUrl", "\nfunction customNormalizeUrl (url) {\n  const [urlWithoutFragment, fragment] = url.split('#')\n  return [normalizeUrl(urlWithoutFragment) + '/', fragment].filter(Boolean).join('#')\n}\n"], ["calculateWeekNumber", "\nfunction () {\n  var a = new Date(f.Y(), f.n() - 1, f.j() - f.N() + 3)\n  var b = new Date(a.getFullYear(), 0, 4)\n  return _pad(1 + Math.round((a - b) / 864e5 / 7), 2)\n}\n"], ["CallApiMethodWithSlug", "\nfunction (callback, slug) {\n  var host = apiStorefront\n  var endpoint = '/' + storeId + '@' + slug.replace(/\\//g, '@')\n\n  <CreateCallbackFunction>\n  var Callback = function (err, body) {\n    if (!err) {\n      var val = body.GET\n      if (val) {\n        val = val.split('@')\n        body = {\n          'resource': val[0],\n          '_id': val[1]\n        }\n        callback(null, body)\n      } else {\n        body = {\n          'status': 404,\n          'error_code': -44,\n          'message': 'Page not found, invalid slug or store ID'\n        }\n        var msg = body.message\n        errorHandling(callback, msg, body)\n      }\n    } else {\n      callback(err, body)\n    }\n  }\n  </CreateCallbackFunction>\n\n  runMethod(Callback, endpoint, host)\n}\n"], ["extendObservablePrototype", "\nfunction(module, exports, __webpack_require__) {\n  \"use strict\";\n  var Observable_1 = __webpack_require__(5);\n  var debounce_1 = __webpack_require__(429);\n  Observable_1.Observable.prototype.debounce = debounce_1.debounce;\n}\n"], ["getColumnValue", "\nfunction getColumnValue(columnIdentifier) {\n  var column = resolveColumnIdentifierToColumn(\n    columns, columnIdentifier, mapColumnNameToIndices);\n  return column ? column.getRowValue(this) : undefined;\n}\n"], ["convertFromAlphabetToNumber", "\nfunction fromAlphabet(str, alphabet) {\n  var base = alphabet.length;\n  var pos = 0;\n  var num = 0;\n\n  for (let chr of str) {\n    let at = alphabet.indexOf(chr);\n    if (at === -1) return NaN;\n    num += Math.pow(base, pos) * at;\n    pos++;\n  }\n\n  return num;\n}\n"], ["resolveSuperClass", "\nfunction(cls,superName) {\n  var superClass = factory.resolve(superName);\n  return factory.superOf(cls,superClass);\n}\n"], ["deployEncodedContract", "\nfunction (contract, params, funAbi, linkLibraries, linkReferences, callback) {\n  this.encodeParams(params, funAbi, (error, encodedParam) => {\n    if (error) return callback(error)\n    var bytecodeToDeploy = contract.evm.bytecode.object\n    <handleLibrariesLinking>\n    if (bytecodeToDeploy.indexOf('_') >= 0) {\n      if (linkLibraries && linkReferences) {\n        for (var libFile in linkLibraries) {\n          for (var lib in linkLibraries[libFile]) {\n            var address = linkLibraries[libFile][lib]\n            if (!ethJSUtil.isValidAddress(address)) return callback(address + ' is not a valid address. Please check the provided address is valid.')\n            bytecodeToDeploy = this.linkLibraryStandardFromlinkReferences(lib, address.replace('0x', ''), bytecodeToDeploy, linkReferences)\n          }\n        }\n      }\n    }\n    </handleLibrariesLinking>\n    <checkRemainingUnlinkedCode>\n    if (bytecodeToDeploy.indexOf('_') >= 0) {\n      return callback('Failed to link some libraries')\n    }\n    </checkRemainingUnlinkedCode>\n    return callback(null, { dataHex: bytecodeToDeploy + encodedParam.dataHex, funAbi, funArgs: encodedParam.funArgs, contractBytecode: contract.evm.bytecode.object })\n  })\n}\n"], ["applyGdpr", "\nfunction applyGdpr(bidderRequest, ortbRequest) {\n  if (bidderRequest && bidderRequest.gdprConsent) {\n    ortbRequest.regs = { ext: { gdpr: bidderRequest.gdprConsent.gdprApplies ? 1 : 0 } };\n    ortbRequest.user = { ext: { consent: bidderRequest.gdprConsent.consentString } };\n  }\n}\n"], ["destroyComponent", "\nfunction() {\n  if (this.__rendered) {\n    this.purgeListeners();\n    <nullifyReferences>\n    this.yearEl = null;\n    this.monthEl = null;\n    this.errorEl = null;\n    this.submitEl = null;\n    this.cancelEl = null;\n    this.firstCtrl = null;\n    this.lastCtrl = null;\n    if (this.navEl) {\n      this.navEl.innerHTML = \"\";\n    }\n    </nullifyReferences>\n    <removeNavElement>\n    var p = this.navEl.parentNode;\n    if (p) {\n      p.removeChild(this.navEl);\n    }\n    this.navEl = null;\n    </removeNavElement>\n    <removeMaskElement>\n    var pm = this.maskEl.parentNode;\n    if (pm) {\n      pm.removeChild(this.maskEl);\n    }\n    this.maskEl = null;\n    </removeMaskElement>\n    this.__rendered = false;\n  }\n}\n"], ""]