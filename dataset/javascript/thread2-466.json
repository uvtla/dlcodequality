[["_getQBezierValue", "\nfunction _getQBezierValue(t, p1, p2, p3) {\n    var iT = 1 - t;\n    return iT * iT * p1 + 2 * iT * t * p2 + t * t * p3;\n}\n"], ["commandFunction", "\nfunction (fnName, args) {\n    var cmdName = args[0].toLowerCase(),\n        cmd, cmdFn;\n        <lookupCommand>\n    cmd = this.commands[cmdName] || UE.commands[cmdName];\n    cmdFn = cmd && cmd[fnName];\n        </lookupCommand>\n    if ((!cmd || !cmdFn) && fnName == 'queryCommandState') {\n        return 0;\n    } else if (cmdFn) {\n        return cmdFn.apply(this, args);\n    }\n}\n"], ["FieldValidator", "\nfunction FieldValidator(rules, config) {\n    this.rules = rules;\n    this.fieldLabel = undefined;\n        <processConfig>\n    if (config) {\n        this.setConfig(config);\n    }\n        </processConfig>\n}\n"], ["takeGlobalQueue", "\nfunction takeGlobalQueue() {\n    if (globalDefQueue.length) {\n        each(globalDefQueue, function(queueItem) {\n            var id = queueItem[0];\n            if (typeof id === 'string') {\n                context.defQueueMap[id] = true;\n            }\n            defQueue.push(queueItem);\n        });\n        globalDefQueue = [];\n    }\n}\n"], ["PointCreation", "\nfunction(lon, lat) {\n    if (OpenLayers.Util.isArray(lon)) {\n        lat = lon[1];\n        lon = lon[0];\n    }\n    this.lon = OpenLayers.Util.toFloat(lon);\n    this.lat = OpenLayers.Util.toFloat(lat);\n}\n"], ["ImageUrlSource", "\nfunction ImageUrlSource(sourceFromTile, opts) {\n    opts = opts ? opts : {};\n    this._loadPool = new WorkPool({\n        concurrency: opts.concurrency || defaultConcurrency\n    });\n    \n    this._retryDelay = opts.retryDelay || defaultRetryDelay;\n    this._retryMap = {};\n    \n    this._sourceFromTile = sourceFromTile;\n}\n"], ["unwrap", "\nfunction unwrap(value) {\n    if (streaming) return value;\n    return new Promise(function (resolve) {\n        stream._read = function () {\n            release();\n            this._read = release;\n            resolve(value);\n        }\n    });\n}\n"], ["searchBar_removeEngine", "\nfunction searchBar_removeEngine(name) {\n    if (this.isEngineInstalled(name)) {\n        var engine = this._bss.getEngineByName(name);\n        this._bss.removeEngine(engine);\n    }\n}\n"], ["modulo", "\nfunction modulo(n, d) {\n    if (d === 0) {\n        return n;\n    }\n    if (d < 0) {\n        return NaN;\n    }\n    return (n % d + d) % d;\n}\n"], ["handleTouchEvent", "\nfunction (event) {\n    event = normalizeEvent(this.dom, event);\n    \n    event.zrByTouch = true;\n    \n    this.handler.processGesture(this, event, 'change');\n    \n    domHandlers.mousemove.call(this, event);\n    \n    setTouchTimer(this);\n}\n"], ""]