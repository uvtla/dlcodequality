[["nextValidStart", "\nfunction nextValidStart(schedules) {\n    var latest;\n    for(var i = 0, len = schedules.length; i < len; i++) {\n      var end = schedules[i].range[1];\n      latest = !latest || end < latest ? end : latest;\n    }\n\n    return latest;\n}\n"], ["resolverOpts", "\nfunction resolverOpts(resolveMode, maxLen, index, dtypes) {\n  index = isUndefined(index) ? null : index;\n  dtypes = isUndefined(dtypes) ? null : dtypes;\n  return {\n    resolveMode: resolveMode,\n    maxLen: maxLen,\n    index: index,\n    dtypes: dtypes,\n  };\n}\n"], ["selectValueType", "\nfunction selectValueType(props, propName, componentName) {\n  if (props[propName] == null) {\n    return null;\n  }\n  if (props.multiple) {\n    if (!Array.isArray(props[propName])) {\n      return new Error(\n        (\"The `\" + propName + \"` prop supplied to <select> must be an array if \") +\n        (\"`multiple` is true.\")\n      );\n    }\n  } else {\n    if (Array.isArray(props[propName])) {\n      return new Error(\n        (\"The `\" + propName + \"` prop supplied to <select> must be a scalar \") +\n        (\"value if `multiple` is false.\")\n      );\n    }\n  }\n}\n"], ["encodeSpecialChars", "\nfunction encodeSpecialChars(str, specialCharsReg) {\n  return encodeURI(str).replace(specialCharsReg, function (m) {\n    return '%' + padding2(m.charCodeAt(0).toString(16));\n  });\n}\n"], ["EUCJPDecoder", "\nfunction EUCJPDecoder(options) {\n    var fatal = options.fatal;\n    var eucjp_jis0212_flag = false,\n        eucjp_lead = 0x00;\n\n    this.handler = function(stream, bite) {\n      \n      if (bite === end_of_stream && eucjp_lead !== 0x00) {\n        eucjp_lead = 0x00;\n        return decoderError(fatal);\n      }\n\n      if (bite === end_of_stream && eucjp_lead === 0x00)\n        return finished;\n\n      if (eucjp_lead === 0x8E && inRange(bite, 0xA1, 0xDF)) {\n        eucjp_lead = 0x00;\n        return 0xFF61 + bite - 0xA1;\n      }\n\n      if (eucjp_lead === 0x8F && inRange(bite, 0xA1, 0xFE)) {\n        eucjp_jis0212_flag = true;\n        eucjp_lead = bite;\n        return null;\n      }\n\n      if (eucjp_lead !== 0x00) {\n        var lead = eucjp_lead;\n        eucjp_lead = 0x00;\n        var code_point = null;\n        \n        if (inRange(lead, 0xA1, 0xFE) && inRange(bite, 0xA1, 0xFE)) {\n          code_point = indexCodePointFor(\n            (lead - 0xA1) * 94 + (bite - 0xA1),\n            index(!eucjp_jis0212_flag ? 'jis0208' : 'jis0212'));\n        }\n        eucjp_jis0212_flag = false;\n        if (!inRange(bite, 0xA1, 0xFE))\n          stream.prepend(bite);\n        if (code_point === null)\n          return decoderError(fatal);\n        return code_point;\n      }\n\n      if (isASCIIByte(bite))\n        return bite;\n\n      if (bite === 0x8E || bite === 0x8F || inRange(bite, 0xA1, 0xFE)) {\n        eucjp_lead = bite;\n        return null;\n      }\n\n      return decoderError(fatal);\n    };\n  }\n"], ["updateMathJax", "\nfunction() {\n  for (var i = 0, all = MathJax.Hub.getAllJax(), jax; jax = all[i]; i++) {\n    var math = document.getElementById(jax.inputID + '-Frame');\n    if (math) {\n      math.removeAttribute('hasSpeech');\n      Explorer.AddSpeech(math);\n    }\n  }\n}\n"], ["getCharacteristicDescriptors", "\nfunction (successCallback, errorCallback, deviceHandle, charHandle) {\n\twinble.logger.logDebug(\"getCharacteristicDescriptors\", \"deviceHandle='\" + deviceHandle + \", charHandle='\" + charHandle + \"'\");\n\tvar device = winble.deviceManager.getDeviceFromHandle(deviceHandle, \"getCharacteristicDescriptors\", errorCallback);\n\tif (device == null)\n\t\treturn;\n\tvar characteristic = winble.deviceManager.getCharacteristicFromHandle(device, charHandle, \"getCharacteristicDescriptors\", errorCallback);\n\tif (characteristic == null)\n\t\treturn;\n\tvar descList = characteristic.gattChar.getAllDescriptors();\n\tvar descListOut = [];\n\tfor (var i = 0; i < descList.length; i++) {\n\t\twinble.logger.logDebug(\"getCharacteristicDescriptors\", \"Found \" + characteristic.gattChar.uuid + \" descriptor '\" + descList[i].uuid + \"'\");\n\t\tvar descStore = {\n\t\t\t\"gattDesc\": descList[i],\n\t\t\t\"handle\": winble.nextGattHandle++\n\t\t};\n\t\tdevice.descList[descStore.handle] = descStore;\n\t\tvar charOut = {\n\t\t\t\"handle\": descStore.handle,\n\t\t\t\"uuid\": descStore.gattDesc.uuid,\n\t\t\t\"permissions\": winble.deviceManager.permissionsFromProtectionLevel(descStore.gattDesc.protectionLevel)\n\t\t};\n\t\tdescListOut.push(charOut);\n\t}\n\tsuccessCallback(descListOut);\n}\n"], ["getTreeBox", "\nfunction(nodes) {\n    var i, node, matrix, treeBox;\n    var box = new kity.Box();\n    if (!(nodes instanceof Array)) nodes = [ nodes ];\n    for (i = 0; i < nodes.length; i++) {\n        node = nodes[i];\n        matrix = node.getLayoutTransform();\n        treeBox = node.getContentBox();\n        if (node.isExpanded() && node.children.length) {\n            treeBox = treeBox.merge(this.getTreeBox(node.children));\n        }\n        box = box.merge(matrix.transformBox(treeBox));\n    }\n    return box;\n}\n"], ["truncate", "\nfunction truncate() {\n\tconst oldValue = goblin.db;\n\tgoblin.db = {};\n\tgoblin.goblinDataEmitter.emit('change', {\n\t\ttype: 'truncate',\n\t\tvalue: goblin.db,\n\t\toldValue: oldValue\n\t});\n}\n"], ["newInstance", "\nfunction newInstance(clazz, args) {\n    if (arguments.length > 1 && args.length > 0) {\n        var f = function () {};\n        f.prototype = clazz.prototype;\n        var o = new f();\n        clazz.apply(o, args);\n        return o;\n    }\n    return new clazz();\n}\n"], "```"]