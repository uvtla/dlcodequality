[["addProcessor", "\nfunction addProcessor(eventType, processor) {\n    if (processors[eventType] === undefined)\n        processors[eventType] = [];\n    processors[eventType].push(processor);\n}\n"], ["asyncOperation", "\nfunction async(schema, values, optionalOptions, callbackFn) {\n    var options, callback;\n\n    options = optionalOptions || {};\n    callback = callbackFn || optionalOptions;\n    process.nextTick(_async);\n\n    function _async() {\n        deref(schema, options, function (err, derefSchema) {\n            var result;\n\n            if (err) {\n                callback(err);\n            } else {\n                result = normalize(derefSchema, values, options);\n                callback(null, result);\n            }\n        });\n    }\n}\n"], ["createCustomEvent", "\nfunction create(type, detail = null) {\n    return new window.CustomEvent(type, { bubbles: true, cancelable: true, detail });\n}\n"], ["noOp", "\nfunction noOp (error) {\n    if (error == null) return;\n    error = pruneErrorStack(error);\n    nextTick(function () {\n        if (isFunction(thunks.onerror)) thunks.onerror(error);\n        else throw error;\n    });\n}\n"], ["anonymousDataProcessing", "\nfunction () {\n\n    if (this.options.switchRowsAndColumns) {\n        this.columns = this.rowsToColumns(this.columns);\n    }\n\n    this.getColumnDistribution();\n\n    this.parseTypes();\n\n    if (this.parsed() !== false) {\n\n        this.complete();\n    }\n\n}\n"], ["addChainableConstructors", "\nfunction addChainableConstructors() {\n    var match = fnPackage.name.match(/^set(\\w+)ChainableConstructor$/);\n    if (match) {\n        var namespace = match[1];\n        var createPackage = sourcePackages.find(function(p) {\n            return p.name === 'create' && p.namespace === namespace;\n        });\n        createPackage.dependencies.push(fnPackage.name);\n    }\n}\n"], ["mongooseify", "\nfunction mongooseify(obj, returnValues) {\n    applyMethods(obj);\n\n    traverse(obj, (key, value) => {\n        applyMethods(value);\n    });\n\n    function applyMethods(value) {\n        if (value && value.hasOwnProperty('_id')) {\n            value.toObject = jasmine.createSpy('toObject');\n            value.toObject.and.returnValue(JSON.parse(JSON.stringify(value)));\n            value.save = jasmine.createSpy('save');\n            value.save.and.returnValue(returnValues && returnValues.save ? returnValues.save : Promise.resolve({ name: 'fooy' }));\n        }\n    }\n}\n"], ["fileSaveHandler", "\nfunction (eventArgs) {\n    if (eventArgs.kind === Windows.ApplicationModel.Activation.ActivationKind.pickSaveFileContinuation) {\n        var file = eventArgs.file;\n        saveFile(file);\n        webUIApp.removeEventListener(\"activated\", fileSaveHandler);\n    }\n}\n"], ["fromStringParser", "\nfunction fromString(source) {\n    var index = 0;\n    return (function parse(depth, binders, aliases) {\n        while (/[^a-zA-Z0-9\\(_]/.test(source[index]))\n            ++index;\n        if (source[index] === \"(\") {\n            ++index;\n            var app = parse(depth, binders, aliases);\n            while (source[index] !== \")\")\n                app = App(app, parse(depth, binders, aliases));\n            ++index;\n            return app;\n        } else {\n            var binder = \"\";\n            while (/[a-zA-Z0-9_]/.test(source[index]) && index !== source.length)\n                binder += source[index++];\n            switch (source[index]) {\n                case \".\":\n                    return Lam(parse(depth + 1, binders.concat(binder), aliases.concat(null)))\n                case \":\":\n                    var term = parse(depth, binders, aliases);\n                    var body = parse(depth + 1, binders.concat(binder), aliases.concat(term));\n                    return body;\n                default:\n                    var idx = binders.lastIndexOf(binder);\n                    return aliases[idx] || Var(depth - idx - 1);\n            }\n        }\n    })(0, [], []);\n}\n"], ["moduleDependencyResolver", "\nfunction (parentId, module, callback) {\n    if (typeof module === \"string\") {\n        var payload = lookup(parentId, module);\n        if (payload != undefined) {\n            callback && callback();\n            return payload;\n        }\n    } else if (Object.prototype.toString.call(module) === \"[object Array]\") {\n        var params = [];\n        for (var i = 0, l = module.length; i < l; ++i) {\n            var dep = lookup(parentId, module[i]);\n            if (dep == undefined && require.original)\n                return;\n            params.push(dep);\n        }\n        return callback && callback.apply(null, params) || true;\n    }\n}\n"], "```"]