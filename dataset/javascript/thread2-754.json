[["isAdmin", "\nfunction isAdmin(options, username) {\n\treturn (options.configParams.get(\"orion.auth.user.creation\") || \"\").split(\",\").some(function(user) {\n\t\treturn user === username;\n\t});\n}\n"], ["RenderManager", "\nfunction RenderManager(view) {\n\tthis.running = false;\n\tthis._frame = 0;\n\n\tthis.view = view;\n\tthis.skipFrames = 0;\n\tthis.skipFramesCounter = 0;\n\tthis.onEnterFrame = new signals.Signal();\n\tthis.onExitFrame = new signals.Signal();\n\tthis.render = this.render.bind(this);\n\tthis.renderLoop = this.renderLoop.bind(this);\n}\n"], ["paginatedInfo", "\nfunction paginatedInfo() {\n      var first = (this.currentPage - 1) * this.currentPerPage + 1;\n      var last = Math.min(this.total, this.currentPage * this.currentPerPage);\n\n      if (last === 0) {\n        first = 0;\n      }\n\n      return \"\".concat(first, \" - \").concat(last, \" \").concat(this.ofText, \" \").concat(this.total);\n}\n"], ["updateRating", "\nfunction (rate) {\n      var value = parseFloat(rate);\n      \n      <parseAndValidate>\n      if (this._contains(value)) {\n      </parseAndValidate>\n        this._fillUntil(this._rateToIndex(value));\n        this.$input.val(value);\n      \n      <handleEmptyRate>  \n      } else if (rate === '') {\n        this._fillUntil(0);\n        this.$input.val('');\n      }\n      </handleEmptyRate>\n}\n"], ["sendHAR", "\nfunction(url, response, method, status, headers) {\n\t\t\t<checkPlayStarted>\n\t\t\tif (!_private.isPlayStarted()) {\n\t\t\t\tthrow new Error(\"Start the player first before you add a response.\");\n\t\t\t}\n\t\t\t</checkPlayStarted>\n\t\t\t\n\t\t\t<buildAndAddHAREntry>\n\t\t\tvar sMethod = method || \"GET\";\n\t\t\tvar aHeaders = headers || [{\n\t\t\t\t\"name\": \"Content-Type\",\n\t\t\t\t\"value\": \"text/plain;charset=utf-8\"\n\t\t\t}];\n\t\t\tvar iStatus = status || 200;\n\t\t\tvar oEntry = {\n\t\t\t\t\"startedDateTime\": new Date().toISOString(),\n\t\t\t\t\"time\": 0,\n\t\t\t\t\"request\": {\n\t\t\t\t\t\"headers\": [],\n\t\t\t\t\t\"url\": url,\n\t\t\t\t\t\"method\": sMethod\n\t\t\t\t},\n\t\t\t\t\"response\": {\n\t\t\t\t\t\"status\": iStatus,\n\t\t\t\t\t\"content\": {\n\t\t\t\t\t\t\"text\": response\n\t\t\t\t\t},\n\t\t\t\t\t\"headers\": aHeaders\n\t\t\t\t}\n\t\t\t};\n\t\t\tvar iIndex = _private.mHarFileContent.log.entries.push(oEntry) - 1;\n\t\t\t_private.addEntryToMapping(_private.mHarFileContent, _private.mHarFileContent.log.entries, iIndex);\n\t\t\t</buildAndAddHAREntry>\n}\n"], ["releaseTriggeredEvent", "\nfunction releaseTriggeredEvent(oHandler) {\n\t\t<validateHandler>\n\t\tif (!oHandler) {\n\t\t\tLog.error(\"Release trigger events must not be called without passing a valid handler!\");\n\t\t\treturn;\n\t\t}\n\t\t</validateHandler>\n\t\t\n\t\t<handleEventRelease>\n\t\tvar mEventInfo = mTriggerEventInfo[oHandler.type];\n\n\t\tif (!mEventInfo) {\n\t\t\treturn;\n\t\t} else if (!mEventInfo.domRefs[oHandler.id] || !mEventInfo.domRefs[oHandler.id].domRef) {\n\t\t\tLog.warning(\"Release trigger event for event type \" + oHandler.type + \"on Control \" + oHandler.id + \": DomRef does not exists\");\n\t\t\treturn;\n\t\t}\n\n\t\tdelete mEventInfo.domRefs[oHandler.id];\n\t\t</handleEventRelease>\n}\n"], ["colorPickerComponent", "\nfunction colorPickerComponent(ngeoColorpickerTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: {\n      colors: '<?ngeoColorpicker',\n      color: '=?ngeoColorpickerColor'\n    },\n    controller: 'NgeoColorpickerController as ctrl',\n    bindToController: true,\n    templateUrl: ngeoColorpickerTemplateUrl\n  };\n}\n"], ["hasChangedAttribute", "\nfunction(attr) {\n      if (attr == null) return !!Object.keys(this.changed).length;\n      return _.has(this.changed, attr);\n}\n"], ["buildCookieString", "\nfunction (name , value , encodeValue , options )  {\n        \n        var lang = YAHOO.lang,\n            text = encodeURIComponent(name) + \"=\" + (encodeValue ? encodeURIComponent(value) : value);\n\n        <optionsProcessing>\n        if (lang.isObject(options)){\n            \n            if (options.expires instanceof Date){\n                text += \"; expires=\" + options.expires.toUTCString();\n            }\n            \n            if (lang.isString(options.path) && options.path !== \"\"){\n                text += \"; path=\" + options.path;\n            }\n            \n            if (lang.isString(options.domain) && options.domain !== \"\"){\n                text += \"; domain=\" + options.domain;\n            }\n            \n            if (options.secure === true){\n                text += \"; secure\";\n            }\n        }\n        </optionsProcessing>\n        \n        return text;\n}\n"], ["processNode", "\nfunction processNode(state, node, data) {\n  <prepareNode>\n  if (typeof node === 'string') {\n    node = document.getElementById(node);\n  }\n  if (data == null) {\n    data = {};\n  }\n  </prepareNode>\n  \n  state.stack.push(node.nodeName + (node.id ? '#' + node.id : ''));\n  var pushedNode = false;\n  \n  <processNodeAttributesAndEvents>\n  try {\n    \n    if (node.attributes && node.attributes.length) {\n      \n      <handleSpecialAttributes>\n      if (node.hasAttribute('foreach')) {\n        processForEach(state, node, data);\n        return;\n      }\n      if (node.hasAttribute('if')) {\n        if (!processIf(state, node, data)) {\n          return;\n        }\n      }\n      </handleSpecialAttributes>\n      \n      state.nodes.push(data.__element);\n      data.__element = node;\n      pushedNode = true;\n      \n      ...\n    }\n    </processNodeAttributesAndEvents>\n  \n    ...\n    \n    <processChildNodes>\n    var childNodes = Array.prototype.slice.call(node.childNodes);\n    for (var j = 0; j < childNodes.length; j++) {\n      processNode(state, childNodes[j], data);\n    }\n    </processChildNodes>\n    \n    <processTextNode>\n    if (node.nodeType === 3 ) {\n      processTextNode(state, node, data);\n    }\n    </processTextNode>\n    \n  }\n  finally {\n    if (pushedNode) {\n      data.__element = state.nodes.pop();\n    }\n    state.stack.pop();\n  }\n}\n"], "```\n\nThe `<processNodeAttributesAndEvents>` tag includes a large block of the function to demonstrate that although it's a big chunk of logic, it's all related to processing the node's attributes and events and thus constitutes a single responsibility. The rest of the function is also SRP-compliant as each section is dealing with a particular aspect of processing a node or its children."]