[["unregisterSelectedItemWatcher", "\nfunction unregisterSelectedItemWatcher (cb) {\n    var i = selectedItemWatchers.indexOf(cb);\n    if (i !== -1) {\n      selectedItemWatchers.splice(i, 1);\n    }\n}\n"], ["isSymbolTerm", "\nfunction isSymbolTerm(node, symbolName) {\n  if (Node.PolynomialTerm.isPolynomialTerm(node)) {\n    const polyTerm = new Node.PolynomialTerm(node);\n    if (polyTerm.getSymbolName() === symbolName) {\n      return true;\n    }\n  }\n  return false;\n}\n"], ["loadReporter", "\nfunction loadReporter(reporterPath) {\n    var reporter;\n    reporterPath = reporterPath || 'checkstyle';\n    if (!fs.existsSync(path.resolve(reporterPath))) {\n        try {\n            reporter = require('./lib/reporters/' + reporterPath);\n        } catch (e) {\n            try {\n                reporter = require('jscs/lib/reporters/' + reporterPath);\n            }\n            catch (e) {\n                reporter = null;\n            }\n        }\n    } else {\n        try {\n            reporter = require(path.resolve(reporterPath));\n        } catch (e) {\n            reporter = null;\n        }\n    }\n    return reporter;\n}\n"], ["calculateUnitRatios", "\nfunction calculateUnitRatios () {\n    var sameRatioIndicators = {\n        myParent: element.parentNode || document.body, \n        position: CSS.getPropertyValue(element, \"position\"), \n        fontSize: CSS.getPropertyValue(element, \"fontSize\") \n    },\n    samePercentRatio = ((sameRatioIndicators.position === callUnitConversionData.lastPosition) && (sameRatioIndicators.myParent === callUnitConversionData.lastParent)),                        \n    sameEmRatio = (sameRatioIndicators.fontSize === callUnitConversionData.lastFontSize);\n\n    callUnitConversionData.lastParent = sameRatioIndicators.myParent;\n    callUnitConversionData.lastPosition = sameRatioIndicators.position;\n    callUnitConversionData.lastFontSize = sameRatioIndicators.fontSize;\n\n    var measurement = 100,\n        unitRatios = {};\n\n    if (!sameEmRatio || !samePercentRatio) {\n        var dummy = Data(element).isSVG ? document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\") : document.createElement(\"div\");\n\n        Velocity.init(dummy);\n        sameRatioIndicators.myParent.appendChild(dummy);\n\n        $.each([ \"overflow\", \"overflowX\", \"overflowY\" ], function(i, property) {\n            Velocity.CSS.setPropertyValue(dummy, property, \"hidden\");\n        });\n        Velocity.CSS.setPropertyValue(dummy, \"position\", sameRatioIndicators.position);\n        Velocity.CSS.setPropertyValue(dummy, \"fontSize\", sameRatioIndicators.fontSize);\n        Velocity.CSS.setPropertyValue(dummy, \"boxSizing\", \"content-box\");\n\n        $.each([ \"minWidth\", \"maxWidth\", \"width\", \"minHeight\", \"maxHeight\", \"height\" ], function(i, property) {\n            Velocity.CSS.setPropertyValue(dummy, property, measurement + \"%\");\n        });\n        Velocity.CSS.setPropertyValue(dummy, \"paddingLeft\", measurement + \"em\");\n\n        unitRatios.percentToPxWidth = callUnitConversionData.lastPercentToPxWidth = (parseFloat(CSS.getPropertyValue(dummy, \"width\", null, true)) || 1) / measurement; \n        unitRatios.percentToPxHeight = callUnitConversionData.lastPercentToPxHeight = (parseFloat(CSS.getPropertyValue(dummy, \"height\", null, true)) || 1) / measurement; \n        unitRatios.emToPx = callUnitConversionData.lastEmToPx = (parseFloat(CSS.getPropertyValue(dummy, \"paddingLeft\")) || 1) / measurement; \n\n        sameRatioIndicators.myParent.removeChild(dummy);\n    } else {\n        unitRatios.emToPx = callUnitConversionData.lastEmToPx;\n        unitRatios.percentToPxWidth = callUnitConversionData.lastPercentToPxWidth;\n        unitRatios.percentToPxHeight = callUnitConversionData.lastPercentToPxHeight;\n    }\n\n    if (callUnitConversionData.remToPx === null) {\n        callUnitConversionData.remToPx = parseFloat(CSS.getPropertyValue(document.body, \"fontSize\")) || 16; \n    }\n\n    if (callUnitConversionData.vwToPx === null) {\n        callUnitConversionData.vwToPx = parseFloat(window.innerWidth) / 100; \n        callUnitConversionData.vhToPx = parseFloat(window.innerHeight) / 100; \n    }\n\n    unitRatios.remToPx = callUnitConversionData.remToPx;\n    unitRatios.vwToPx = callUnitConversionData.vwToPx;\n    unitRatios.vhToPx = callUnitConversionData.vhToPx;\n\n    if (Velocity.debug >= 1) console.log(\"Unit ratios: \" + JSON.stringify(unitRatios), element);\n\n    return unitRatios;\n}\n"], ["translate", "\nfunction translate(element, properties, constraints) {\n  let elements = [].concat(element);\n  let n = elements.length;\n\n  if (properties) {\n    <validateProperties>\n    if (!assert(properties.x === undefined || !isNaN(properties.x), 'X property must be a number.')) return null;\n    if (!assert(properties.y === undefined || !isNaN(properties.y), 'Y property must be a number.')) return null;\n    if (!assert(properties.z === undefined || !isNaN(properties.z), 'Z property must be a number.')) return null;\n    </validateProperties>\n\n    let units = properties.units || 'px';\n\n    <validateConstraints>\n    if (constraints) {\n      if (!assert(constraints.x === undefined || !isNaN(constraints.x), 'X constraint must be a number.')) return null;\n      if (!assert(constraints.y === undefined || !isNaN(constraints.y), 'Y constraint must be a number.')) return null;\n      if (!assert(constraints.z === undefined || !isNaN(constraints.z), 'Z constraint must be a number.')) return null;\n    }\n    </validateConstraints>\n\n    <calculateTranslations>\n    let x = (constraints && (constraints.x !== undefined)) ? Math.min(properties.x, constraints.x) : properties.x;\n    let y = (constraints && (constraints.y !== undefined)) ? Math.min(properties.y, constraints.y) : properties.y;\n    let z = (constraints && (constraints.z !== undefined)) ? Math.min(properties.z, constraints.z) : properties.z;\n    </calculateTranslations>\n\n    let translateX = (properties.x !== undefined) ? 'translateX(' + x + units + ')' : null;\n    let translateY = (properties.y !== undefined) ? 'translateY(' + y + units + ')' : null;\n    let translateZ = (properties.z !== undefined) ? 'translateZ(' + z + units + ')' : null;\n    let transforms = '';\n\n    <combineTransforms>\n    if (translateX) transforms += (transforms === '') ? translateX : ' ' + translateX;\n    if (translateY) transforms += (transforms === '') ? translateY : ' ' + translateY;\n    if (translateZ) transforms += (transforms === '') ? translateZ : ' ' + translateZ;\n    </combineTransforms>\n\n    <applyTransforms>\n    for (let i = 0; i < n; i++) {\n      elements[i].style.transform = transforms;\n    }\n    </applyTransforms>\n\n    let t = {};\n\n    <createTranslationObject>\n    if (translateX) t.x = x;\n    if (translateY) t.y = y;\n    if (translateZ) t.z = z;\n    </createTranslationObject>\n\n    return t;\n  }\n  else {\n    <resetTransforms>\n    for (let j = 0; j < n; j++) {\n      elements[j].style.transform = 'translateX(0) translateY(0) translateZ(0)';\n    }\n    </resetTransforms>\n\n    return {\n      x: 0,\n      y: 0,\n      z: 0\n    };\n  }\n}\n"], ["_eachArrayReverse", "\nfunction _eachArrayReverse(arry, fn) {\n  let ret = true\n  <iterateArrayReverse>\n  for (let i = arry.length - 1; i >= 0; i--) {\n    ret = fn(arry[i], i, arry)\n    if (ret === false) {\n      break\n    }\n  }\n  </iterateArrayReverse>\n  return ret\n}\n"], ["cleanupExtension", "\nfunction(oExtension) {\n  if (oExtension._cleanupInfo) {\n    oExtension._cleanupInfo.cell.attr(oExtension._cleanupInfo.attr);\n    oExtension._cleanupInfo = null;\n  }\n}\n"], ["compareByName", "\nfunction (a, b) {\n    <checkNamesExist>\n    if (!a.name || !b.name) {\n        return 0;\n    }\n    </checkNamesExist>\n    <toLowerCaseNames>\n    var an = a.name.toLowerCase(),\n        bn = b.name.toLowerCase(),\n    </toLowerCaseNames>\n    <compareNames>\n    ret = 0;\n\n    if (an < bn) {\n        ret = -1;\n    }\n    if (an > bn) {\n        ret = 1;\n    }\n    </compareNames>\n    return ret;\n}\n"], ["redirect", "\nfunction redirect(ctx, url, status) {\n  <handleJSON>\n  if (ctx.accepts('html', 'json') === 'json') {\n    ctx.set('Location', url);\n    ctx.status = 401;\n    ctx.body = {\n      error: '401 Unauthorized'\n    };\n    return;\n  }\n  </handleJSON>\n  return ctx.redirect(url, status);\n}\n"], ["collect", "\nfunction collect(p, files, matches) {\n  if (!files) files = []\n\n  matches = matches || <defaultMatcher>function (p) {\n    return p.match(/\\.js$/)\n  }</defaultMatcher>\n\n  <traverseFileSystem>\n  if (fs.statSync(p).isDirectory()) {\n    fs.readdirSync(p).forEach(function (item) {\n      collect(path.join(p, item), files, matches)\n    })\n  } else if (matches(p)) {\n    files.push(p)\n  }\n  </traverseFileSystem>\n\n  return files\n}\n"], ""]