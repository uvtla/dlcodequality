[["capture", "\nfunction capture(previousExpr, detection) {\n  var capturing = !!detection[CAPTURING_INDEX];\n\n  if (!capturing)\n    return previousExpr;\n\n  return lazyIntersection(previousExpr, head);\n}\n"], ["Doc", "\nfunction Doc(runner, options) {\n  Base.call(this, runner, options);\n\n  var indents = 2;\n\n  function indent() {\n    return Array(indents).join('  ');\n  }\n\n  runner.on(EVENT_SUITE_BEGIN, function(suite) {\n    if (suite.root) {\n      return;\n    }\n    ++indents;\n    console.log('%s<section class=\"suite\">', indent());\n    ++indents;\n    console.log('%s<h1>%s</h1>', indent(), utils.escape(suite.title));\n    console.log('%s<dl>', indent());\n  });\n\n  runner.on(EVENT_SUITE_END, function(suite) {\n    if (suite.root) {\n      return;\n    }\n    console.log('%s</dl>', indent());\n    --indents;\n    console.log('%s</section>', indent());\n    --indents;\n  });\n\n  runner.on(EVENT_TEST_PASS, function(test) {\n    console.log('%s  <dt>%s</dt>', indent(), utils.escape(test.title));\n    var code = utils.escape(utils.clean(test.body));\n    console.log('%s  <dd><pre><code>%s</code></pre></dd>', indent(), code);\n  });\n\n  runner.on(EVENT_TEST_FAIL, function(test, err) {\n    console.log(\n      '%s  <dt class=\"error\">%s</dt>',\n      indent(),\n      utils.escape(test.title)\n    );\n    var code = utils.escape(utils.clean(test.body));\n    console.log(\n      '%s  <dd class=\"error\"><pre><code>%s</code></pre></dd>',\n      indent(),\n      code\n    );\n    console.log('%s  <dd class=\"error\">%s</dd>', indent(), utils.escape(err));\n  });\n}\n"], ["svg2ttf_conversion", "\nfunction () {\n  $.ajax({\n    url: './test/fonteditor.svg',\n    dataType: 'text'\n  }).done(function(data) {\n    var ttfObject = svg2ttfobject(data);\n    var writer = new TTFWriter();\n\n    var ttfBuffer = writer.write(ttfObject);\n    var base64str = ttf2base64(ttfBuffer);\n\n    var saveBtn = $('.saveas');\n    saveBtn.attr('href', base64str);\n    saveBtn.attr('download', 'save.ttf');\n\n    console.log(ttfObject);\n  });\n}\n"], ["validateAndReturnEmptyObject", "\nfunction(year, month, day) {\n  this._validate(year, month, day, _exports.local.invalidDate || _exports.regionalOptions[''].invalidDate);\n  return {};\n}\n"], ["gatherSnapWrap", "\nfunction gatherSnapWrap() {\n  var element;\n  var value;\n  for (element = $element; element.length; element = element.parent()) {\n    value = element.attr('md-autocomplete-snap');\n    if (angular.isDefined(value)) break;\n  }\n\n  if (element.length) {\n    return {\n      snap: element[0],\n      wrap: (value.toLowerCase() === 'width') ? element[0] : $element.find('md-autocomplete-wrap')[0]\n    };\n  }\n\n  var wrap = $element.find('md-autocomplete-wrap')[0];\n  return {\n    snap: wrap,\n    wrap: wrap\n  };\n}\n"], ["recoverEthereumPrivateKey", "\nfunction(ethereumAddress, ethereumDataDir, ethereumAccountPassword, cb = null){\n  if(isFunction(cb)){\n    try {\n      keythereum.importFromFile(ethereumAddress, ethereumDataDir, function(keyObject){\n        keythereum.recover(ethereumAccountPassword, keyObject, function(privateKey){\n          return cb(null, privateKey)\n        })\n      })\n    } catch (err){\n      return cb(err)\n    }\n  } else {\n    try {\n      var keyObject = keythereum.importFromFile(ethereumAddress, ethereumDataDir)\n      return keythereum.recover(ethereumAccountPassword, keyObject)\n    } catch (err){\n      return err\n    }\n  }\n}\n"], ["selectAndExecuteStrategy", "\nfunction(driverOptions, method, methodOptions, cb){\n  getStrategy(driverOptions, (error, strategy) => {\n    utils.checkError(error, 518, cb, () => {\n      if(!methodOptions.technology && driverOptions.technology) {\n        methodOptions.technology = driverOptions.technology;\n      }\n      checkIfSupported({strategy: strategy, function: method }, (error) => {\n        if(error && error.code === 519){\n          strategy.executeDriver(method, methodOptions, cb);\n        }\n        else if(strategy && strategy[method]){\n          strategy[method](methodOptions, cb);\n        }\n        else{\n          return cb({\n            \"source\": \"driver\",\n            \"error\": \"error\",\n            \"code\": 500,\n            \"msg\": errorFile[500]\n          })\n        }\n      });\n    });\n  });\n}\n"], ["getCachedBinary", "\nfunction getCachedBinary() {\n  var i,\n    cachePath,\n    cacheBinary,\n    cachePathCandidates = getCachePathCandidates(),\n    binaryName = getBinaryName();\n\n  for (i = 0; i < cachePathCandidates.length; i++) {\n    cachePath = path.join(cachePathCandidates[i], pkg.name, pkg.version);\n    cacheBinary = path.join(cachePath, binaryName);\n\n    if (fs.existsSync(cacheBinary)) {\n      return cacheBinary;\n    }\n  }\n\n  return '';\n}\n"], ["repetition", "\nfunction repetition() {\n  var ret = this.seq(this.mightf(repeat), element);\n  if (ret[1]) {\n    return new ast.Repetition(ret[1], ret[2]);\n  }\n  return ret[2];\n}\n"], ["initializeTextareaField", "\nfunction() {\n  \n  this.wrapEl = inputEx.cn('div', {className: 'inputEx-StringField-wrapper'});\n  \n  var attributes = {};\n  attributes.id = this.divEl.id?this.divEl.id+'-field':YAHOO.util.Dom.generateId();\n  attributes.rows = this.options.rows;\n  attributes.cols = this.options.cols;\n  if(this.options.name) attributes.name = this.options.name;\n  if(this.options.readonly) attributes.readonly = 'readonly';\n  \n  this.el = inputEx.cn('textarea', attributes, null, this.options.value);\n  \n  this.wrapEl.appendChild(this.el);\n  this.fieldContainer.appendChild(this.wrapEl);\n}\n"], ""]