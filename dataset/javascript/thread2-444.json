[["retrieveAndUpdateAuthStruct", "\nfunction(owner_id, next) {\n    var self = this,\n    podName = this.getName(),\n    filter = {\n      owner_id : owner_id,\n      type : this.getAuthType(),\n      oauth_provider : this.getName()\n    };\n    <findAccountAuth>\n    this._dao.find('account_auth', filter, function(err, result) {\n      var model, authStruct;\n\n      if (result) {\n        \n        authStruct = {\n          oauth_provider : result.oauth_provider,\n          repr : self._profileRepr(result)\n        }\n      }\n\n      next(err, podName, filter.type, authStruct);\n    });\n    </findAccountAuth>\n  }\n"], ["processAndTransformText", "\nfunction(text, node, type) {\n\t\t\tvar maxNum = 0;\n\t\t\tvar that = this;\n\t\t\t\n\t\t\tvar tsOptions = {\n\t\t\t\ttabstop: function(data) {\n\t\t\t\t\tvar group = parseInt(data.group, 10);\n\t\t\t\t\tif (group === 0)\n\t\t\t\t\t\treturn '${0}';\n\t\t\t\t\t\n\t\t\t\t\tif (group > maxNum) maxNum = group;\n\t\t\t\t\tif (data.placeholder) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar ix = group + tabstopIndex;\n\t\t\t\t\t\tvar placeholder = that.processText(data.placeholder, tsOptions);\n\t\t\t\t\t\treturn '${' + ix + ':' + placeholder + '}';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '${' + (group + tabstopIndex) + '}';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t\t\n\t\t\ttext = this.processText(text, tsOptions);\n\t\t\t\n\t\t\t\n\t\t\ttext = this.replaceVariables(text, this.variablesResolver(node));\n\t\t\t\n\t\t\ttabstopIndex += maxNum + 1;\n\t\t\treturn text;\n\t\t}\n"], ["directiveDefinition", "\nfunction() {\n  return {\n    restrict: 'A',\n    require: '?ngModel',\n    link: function(scope, elm, attr, ctrl) {\n      if (!ctrl) return;\n\n      var regexp, patternExp = attr.ngPattern || attr.pattern;\n      <observePattern>\n      attr.$observe('pattern', function(regex) {\n        if (isString(regex) && regex.length > 0) {\n          regex = new RegExp('^' + regex + '$');\n        }\n\n        if (regex && !regex.test) {\n          throw minErr('ngPattern')('noregexp',\n            'Expected {0} to be a RegExp but was {1}. Element: {2}', patternExp,\n            regex, startingTag(elm));\n        }\n\n        regexp = regex || undefined;\n        ctrl.$validate();\n      });\n      </observePattern>\n\n      ctrl.$validators.pattern = function(modelValue, viewValue) {\n        \n        return ctrl.$isEmpty(viewValue) || isUndefined(regexp) || regexp.test(viewValue);\n      };\n    }\n  };\n}\n"], ["generateMessageBoxWithButtons", "\nfunction (settings) {\n          var buttons, callback = settings.callback || function () { };\n\n          <createButtonFunction>\n          function createButton(text, status, primary) {\n            return {\n              type: \"button\",\n              text: text,\n              subtype: primary ? 'primary' : '',\n              onClick: function (e) {\n                e.control.parents()[1].close();\n                callback(status);\n              }\n            };\n          }\n          </createButtonFunction>\n\n          <determineButtonsBasedOnSettings>\n          switch (settings.buttons) {\n            case MessageBox.OK_CANCEL:\n              buttons = [\n                createButton('Ok', true, true),\n                createButton('Cancel', false)\n              ];\n              break;\n\n            case MessageBox.YES_NO:\n            case MessageBox.YES_NO_CANCEL:\n              buttons = [\n                createButton('Yes', 1, true),\n                createButton('No', 0)\n              ];\n\n              if (settings.buttons == MessageBox.YES_NO_CANCEL) {\n                buttons.push(createButton('Cancel', -1));\n              }\n              break;\n\n            default:\n              buttons = [\n                createButton('Ok', true, true)\n              ];\n              break;\n          }\n          </determineButtonsBasedOnSettings>\n\n          return new Window({\n            padding: 20,\n            x: settings.x,\n            y: settings.y,\n            minWidth: 300,\n            minHeight: 100,\n            layout: \"flex\",\n            pack: \"center\",\n            align: \"center\",\n            buttons: buttons,\n            title: settings.title,\n            role: 'alertdialog',\n            items: {\n              type: \"label\",\n              multiline: true,\n              maxWidth: 500,\n              maxHeight: 200,\n              text: settings.text\n            },\n            onPostRender: function () {\n              this.aria('describedby', this.items()[0]._id);\n            },\n            onClose: settings.onClose,\n            onCancel: function () {\n              callback(false);\n            }\n          }).renderTo(document.body).reflow();\n        }\n"], ["createStaticFunctionMapping", "\nfunction inject (taskKey) {\n    var taskName = task[taskKey]\n\n    var num = parseFloat(taskName)\n\n    <createStaticReturnFunction>\n    if (!isNaN(num)) {\n      funcs[taskName] = function () { return num }\n    }\n    </createStaticReturnFunction>\n  }\n"], ["setValuesInStorage", "\nfunction set(key, val, cb) {\n  return type(key) != 'object'\n    ? localForage.setItem(key, val).then(wrap(cb), cb)\n    <mapAndStoreMultipleValues>\n    : Promise.all(Object.keys(key).map(function(subkey) {\n      return key[subkey] === null\n      ? del(subkey)\n      : set(subkey, key[subkey]);\n    })).then(wrap(val), val);\n    </mapAndStoreMultipleValues>\n}\n"], ["convertToArrayList", "\nfunction (o) {\n            if (o == null) {\n                return [];\n            }\n            if (S.isArray(o)) {\n                return o;\n            }\n            <handleNonArrayConversion>\n            var lengthType = typeof o.length,\n                oType = typeof o;\n            \n            if (lengthType != 'number' ||\n                o.alert ||\n                oType == 'string' ||\n                (oType == 'function' && !( 'item' in o && lengthType == 'number'))) {\n                return [o];\n            }\n            </handleNonArrayConversion>\n            var ret = [];\n            for (var i = 0, l = o.length; i < l; i++) {\n                ret[i] = o[i];\n            }\n            return ret;\n        }\n"], ["defineLazyProperty", "\nfunction(spirit, prefix, Plugin) {\n\t\t<Object.defineProperty>\n    Object.defineProperty(spirit, prefix, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tget: function() {\n\t\t\t\tvar plugin = new Plugin(this);\n\t\t\t\tthis.life.plugins[prefix] = true;\n\t\t\t\tgui.Plugin.$assign(spirit, prefix, plugin);\n\t\t\t\treturn plugin;\n\t\t\t}\n\t\t});\n\t\t</Object.defineProperty>\n\t}\n"], ["createSSEClientWithAuth", "\nfunction newSSEClientFactory(endpoint) {\n    return function(initDict) {\n        initDict = initDict || { };\n        \n        <setupURI>\n        var uriOptions = utils.getURIOptions(initDict);\n        utils.removeURIOptions(initDict);\n        \n        var uri = utils.url(endpoint, uriOptions);\n        </setupURI>\n        <setupAuthOptions>\n        var authOptions = utils.getAuthOptions([utils.setup(), this, initDict]);\n        \n        auth.sign(authOptions.key, authOptions.secret, uri);\n        </setupAuthOptions>\n        \n        return new EventSource(uri.toString(), initDict);\n    };\n}\n"], ["calendarNavigatorRender", "\nfunction(html) {\n        var NAV = YAHOO.widget.CalendarNavigator,\n            C = NAV.CLASSES,\n            h = html; \n\n        h[h.length] = '<div class=\"' + C.MONTH + '\">';\n        this.renderMonth(h);\n        h[h.length] = '</div>';\n        h[h.length] = '<div class=\"' + C.YEAR + '\">';\n        this.renderYear(h);\n        h[h.length] = '</div>';\n        h[h.length] = '<div class=\"' + C.BUTTONS + '\">';\n        this.renderButtons(h);\n        h[h.length] = '</div>';\n        h[h.length] = '<div class=\"' + C.ERROR + '\" id=\"' + this.id + NAV.ERROR_SUFFIX + '\"></div>';\n\n        return h;\n    }\n"], "```"]