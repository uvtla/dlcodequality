[["initChart", "\nfunction (init) {\n\t\tvar series = this;\n\n\t\tif (!init) {\n\t\t\t<updateGraphics>\n\t\t\teach(series.points, function (point) {\n\t\t\t\tvar graphic = point.graphic;\n\n\t\t\t\tif (graphic) {\n\t\t\t\t\t<setInitialRotation>\n\t\t\t\t\tgraphic.attr({\n\t\t\t\t\t\trotation: series.yAxis.startAngleRad * 180 / Math.PI\n\t\t\t\t\t});\n\t\t\t\t\t</setInitialRotation>\n\n\t\t\t\t\t<animateRotation>\n\t\t\t\t\tgraphic.animate({\n\t\t\t\t\t\trotation: point.shapeArgs.rotation\n\t\t\t\t\t}, series.options.animation);\n\t\t\t\t\t</animateRotation>\n\t\t\t\t}\n\t\t\t});\n\t\t\t</updateGraphics>\n\n\t\t\t<disableAnimation>\n\t\t\tseries.animate = null;\n\t\t\t</disableAnimation>\n\t\t}\n\t}\n"], ["addWire", "\nfunction(event, args) {\n      var wire = args[0];\n      \n\t  <checkAndAddWire>\n      if( WireIt.indexOf(wire, this.wires) == -1 ) {\n         this.wires.push(wire);\n         \n\t\t <setUpMouseEvents>\n         if(this.enableMouseEvents) {\n            YAHOO.util.Event.addListener(wire.element, \"mousemove\", this.onWireMouseMove, this, true);\n            YAHOO.util.Event.addListener(wire.element, \"click\", this.onWireClick, this, true);\n         }\n\t\t </setUpMouseEvents>\n         \n\t\t <fireEvents>\n         this.eventAddWire.fire(wire);\n\t\t this.eventChanged.fire(this);\n\t\t </fireEvents>\n\t }\n\t  </checkAndAddWire>\n   }\n"], ["createForm", "\nfunction(spec) {\n\tvar method = spec.method,\n\t\tendpoint = spec.endpoint,\n\t\tparams = spec.params,\n\t\tparamsInBody = spec.paramsInBody,\n\t\ttargetName = spec.targetName,\n\t\tform = qq.toElement(\"<form method='\" + method + \"' enctype='multipart/form-data'></form>\"),\n\t\turl = endpoint;\n\n\t<attachParams>\n\tif (paramsInBody) {\n\t\tqq.obj2Inputs(params, form);\n\t}\n\telse {\n\t\turl = qq.obj2url(params, endpoint);\n\t}\n\t</attachParams>\n\n\t<updateFormAttributes>\n\tform.setAttribute(\"action\", url);\n\tform.setAttribute(\"target\", targetName);\n\tform.style.display = \"none\";\n\tdocument.body.appendChild(form);\n\t</updateFormAttributes>\n\n\treturn form;\n}\n"], ["createTableKeyMulti", "\nfunction createTableKeyMulti (spec) {\n\t<validateInput>\n\tassert.equal(typeof spec, 'object', 'spec must be object')\n\tassert.ok(Array.isArray(spec.columns), 'index columns must be array')\n\t</validateInput>\n\n\t<generateKeyString>\n\treturn 'KEY ('+_.map(spec.columns, quoteName).join(', ')+')'\n\t</generateKeyString>\n}\n"], ["calculateSliceNumber", "\nfunction(referencePoint, otherPoint) {\n\t<adjustPoint>\n\tif (this.yDown) {\n\t\tif (otherPoint.y > referencePoint.y) {\n\t\t\totherPoint = {\n\t\t\t\tx: otherPoint.x,\n\t\t\t\ty: referencePoint.y - (otherPoint.y - referencePoint.y)\n\t\t\t}\n\t\t} else if (otherPoint.y < referencePoint.y) {\n\t\t\totherPoint = {\n\t\t\t\tx: otherPoint.x,\n\t\t\t\ty: referencePoint.y + (referencePoint.y - otherPoint.y)\n\t\t\t}\n\t\t}\n\t}\n\t</adjustPoint>\n\n\t<findSlice>\n\tvar delta = vec2d(otherPoint).minus(vec2d(referencePoint))\n\tvar weird = radiansToWeird(delta.angle())\n\tvar compass = weirdToCompass(weird)\n\n\tfor (var i = 0; i < this.slices.length; i++) {\n\t\tif (this.slices[i].contains(compass)) {\n\t\t\treturn this.slices[i].number\n\t\t}\n\t}\n\t</findSlice>\n}\n"], ["blurFocusElement", "\nfunction(){\n\t<getFocusElement>\n\tvar focusElement = this.tmpl ? this.tmpl.focus || this.element : null;\n\t</getFocusElement>\n\n\t<attemptBlur>\n\tif (focusElement)\n\t\ttry {\n\t\t\tfocusElement.blur();\n\t\t} catch(e) {}\n\t</attemptBlur>\n}\n"], ["validateUuids", "\nfunction (uuids) {\n\t<checkUuidValidity>\n\tvar guid = uuids[0]\n\tvar sharedKey = uuids[1]\n\n\tif (!guid || !sharedKey || guid.length !== 36 || sharedKey.length !== 36) {\n\t\tthrow 'Error generating wallet identifier'\n\t}\n\t</checkUuidValidity>\n\n\t<returnIdentifiers>\n\treturn { guid: guid, sharedKey: sharedKey }\n\t</returnIdentifiers>\n}\n"], ["sendMessageWithName", "\nfunction(conversationId, name, text, callback) {\n\t<sendNamedMessage>\n\tsend(null, conversationId, utils.messageText('name', name, text), callback);\n\t</sendNamedMessage>\n}\n"], ["BayesClassifierConstructor", "\nfunction BayesClassifier() {\n  \n\t<instanceCheck>\n\tif (!(this instanceof BayesClassifier)) {\n\t\treturn new BayesClassifier();\n\t}\n\t</instanceCheck>\n\n\t<initializeProperties>\n\tthis.stemmer = stemmer;\n\tthis.docs = [];\n\tthis.lastAdded = 0;\n\tthis.features = {};\n\tthis.classFeatures = {};\n\tthis.classTotals = {};\n\tthis.totalExamples = 1;\n\tthis.smoothing = 1;\n\t</initializeProperties>\n}\n"], ["scrollToY", "\nfunction(y, animate) {\n\t<setDefaultAnimation>\n\tif (animate === undefined) {\n\t\tanimate = true;\n\t}\n\t</setDefaultAnimation>\n\n\t<performScroll>\n\tthis.scroller.scrollTo(0, y, animate, 1);\n\t</performScroll>\n}\n"], ""]