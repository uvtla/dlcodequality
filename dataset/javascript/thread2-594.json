[["insertNode", "\nfunction insertNode (i, last) {\n  var node = new Node(i)\n\n  if (!last) {\n    <initializeNode>\n    node.prev = node\n    node.next = node\n    </initializeNode>\n  } else {\n    <linkNode>\n    node.next = last.next\n    node.prev = last\n    last.next.prev = node\n    last.next = node\n    </linkNode>\n  }\n  return node\n}\n"], ["update", "\nfunction update(image) {\n  <imageLazyLoadCheck>\n  if (image.lazyLoad) {\n    return;\n  }\n  </imageLazyLoadCheck>\n\n  var rect = DOM.getRect(image.element);\n  var foundBreakpoint;\n\n  <calculateBreakpoint>\n  for (var i = 0; i < image.knownSizes.length; i++) {\n    var s = image.knownSizes[i];\n\n    if (rect.width <= s) {\n      foundBreakpoint = s;\n    } else {\n      break;\n    }\n  }\n  </calculateBreakpoint>\n\n  <setDefaultBreakpoint>\n  if (!foundBreakpoint) {\n    foundBreakpoint = image.knownSizes[0];\n  }\n  </setDefaultBreakpoint>\n\n  <updateImageBreakpoint>\n  if (foundBreakpoint !== image.currentBreakpoint || !image.hasRunOnce) {\n    image.currentBreakpoint = foundBreakpoint;\n    loadImageForBreakpoint(image, image.currentBreakpoint);\n  }\n  </updateImageBreakpoint>\n}\n"], ["anonymousFunction", "\nfunction(ctx) {\n\t\tvar subCtx,\n\t\t\ttree = ctx.tree,\n\t\t\tnode = ctx.node,\n\t\t\tchildren = node.children,\n\t\t\topts = ctx.options;\n\n\t\t<guardClause>\n\t\tif(!children){\n\t\t\treturn;\n\t\t}\n\t\t</guardClause>\n\n\t\t<deactivateNodes>\n\t\tif( this.activeNode && this.activeNode.isDescendantOf(node)){\n\t\t\tthis.activeNode.setActive(false); \n\t\t}\n\t\tif( this.focusNode && this.focusNode.isDescendantOf(node)){\n\t\t\tthis.focusNode = null;\n\t\t}\n\t\t</deactivateNodes>\n\n\t\t<removeChildMarkup>\n\t\tthis.nodeRemoveChildMarkup(ctx);\n\t\t</removeChildMarkup>\n\n\t\t<removeChildNodes>\n\t\tsubCtx = $.extend({}, ctx);\n\t\tnode.visit(function(n){\n\t\t\tn.parent = null;\n\t\t\ttree._callHook(\"treeRegisterNode\", tree, false, n);\n\t\t\tif ( opts.removeNode ){\n\t\t\t\tsubCtx.node = n;\n\t\t\t\topts.removeNode.call(ctx.tree, {type: \"removeNode\"}, subCtx);\n\t\t\t}\n\t\t});\n\t\t</removeChildNodes>\n\n\t\t<resetLazyChildren>\n\t\tif( node.lazy ){\n\t\t\tnode.children = [];\n\t\t} else{\n\t\t\tnode.children = null;\n\t\t}\n\t\t</resetLazyChildren>\n\n\t\t<renderNodeStatus>\n\t\tthis.nodeRenderStatus(ctx);\n\t\t</renderNodeStatus>\n\t}\n"], ["_fnBindAction", "\nfunction _fnBindAction( n, oData, fn )\n\t\t{\n\t\t\t$(n)\n\t\t\t\t<bindClickEvent>\n\t\t\t\t.bind( 'click.DT', oData, function (e) {\n\t\t\t\t\t\tn.blur(); \n\t\t\t\t\t\tfn(e);\n\t\t\t\t\t} )\n\t\t\t\t</bindClickEvent>\n\n\t\t\t\t<bindKeypressEvent>\n\t\t\t\t.bind( 'keypress.DT', oData, function (e){\n\t\t\t\t\tif ( e.which === 13 ) {\n\t\t\t\t\t\tfn(e);\n\t\t\t\t\t} } )\n\t\t\t\t</bindKeypressEvent>\n\n\t\t\t\t<bindSelectstartEvent>\n\t\t\t\t.bind( 'selectstart.DT', function () {\n\t\t\t\t\t\n\t\t\t\t\treturn false;\n\t\t\t\t\t} );\n\t\t\t\t</bindSelectstartEvent>\n\t\t}\n"], ["approximateFunction", "\nfunction(x) {\n    <approximationCalculation>\n    var z = Math.abs(x);\n    var t = 1 / (1 + z / 2);\n    var r = t * Math.exp(-z * z - 1.26551223 + t * (1.00002368 +\n            t * (0.37409196 + t * (0.09678418 + t * (-0.18628806 +\n            t * (0.27886807 + t * (-1.13520398 + t * (1.48851587 +\n            t * (-0.82215223 + t * 0.17087277)))))))))\n    </approximationCalculation>\n    return x >= 0 ? r : 2 - r;\n  }\n"], ["createFuncClickCbByInputEl", "\nfunction createFuncClickCbByInputEl(jsWaitBoundList, jsGetListItem, isDblClick, enableLog) {\n  <generateClickCallback>\n  return function clickCb(inputEl, noPrint) {\n    <sendKeys>\n    return inputEl.sendKeys(gT.sOrig.key.ARROW_DOWN)\n    </sendKeys>\n\n    .then(() => {\n      <logMessage>\n      gIn.tracer.msg3('Before wait after cb inputEl click');\n      </logMessage>\n      <waitForBoundList>\n      return gT.sOrig.driver.wait(\n        () => gT.s.browser.executeScriptWrapper(jsWaitBoundList), gT.engineConsts.cbBoundListTimeout\n      )\n      </waitForBoundList>\n\n      .catch((err) => { \n        <handleWaitForBoundListError>\n        const errMsg = 'Error at wait for bound list';\n        gIn.tracer.err(errMsg);\n        gIn.tracer.exc(err);\n        throw new Error(errMsg);\n        </handleWaitForBoundListError>\n      });\n    })\n\n    .then(() => {\n      <logMessage>\n      gIn.tracer.msg3('Before get list item');\n      </logMessage>\n      <getListItem>\n      return gT.s.browser.executeScript(jsGetListItem, false);\n      </getListItem>\n    })\n\n    <delayClickEvent>\n    .then(el => gT.e.lClick.createFuncPrintTextDelayClick(isDblClick, noPrint, enableLog)(el));\n    </delayClickEvent>\n  };\n  </generateClickCallback>\n"], ["Transaction", "\nfunction Transaction (attributes) {\n  this.attributes = {}\n\n  <initializeAttributes>\n  for (var key in attributes) {\n    if (attributes.hasOwnProperty(key)) this.set(key, attributes[key])\n  }\n  </initializeAttributes>\n\n  <setDefaultDate>\n  if (!this.get('date')) this.setDate()\n  </setDefaultDate>\n  \n  <setDefaultAmount>\n  if (!this.get('amount')) this.setAmount()\n  </setDefaultAmount>\n}\n"], ["createElementModule", "\nfunction createElementModule() {\n  <setupGulpPipeline>\n  return gulp\n    .src(`./${config.src.path}/${config.src.entrypoint}`)\n    .pipe(\n      <modifyFileContent>\n      modifyFile(content => {\n        return content.replace(\n          new RegExp(`../node_modules/${config.element.scope}/`, 'g'),\n          '../'\n        );\n      })\n      </modifyFileContent>\n    )\n    .pipe(\n      <renameFile>\n      rename({\n        basename: config.element.tag\n      })\n      </renameFile>\n    )\n    .pipe(gulp.dest(`./${config.temp.path}`));\n  </setupGulpPipeline>\n}\n"], ["sortMatches", "\nfunction sortMatches(self, matches, basename) {\n  var weights = {};\n\n  var ext_name = path.extname(basename);\n  <initializeAliases>\n  var aliases = has(self.__aliases__, ext_name) ? self.__aliases__[ext_name] : [];\n  </initializeAliases>\n\n  <calculateWeights>\n  matches.forEach(function(match) {\n    var extnames = match.replace(basename, '').split('.');\n\n    weights[match] = extnames.reduce(function(sum, ext) {\n      if (!ext) {\n        return sum;\n      }\n\n      ext = '.' + ext;\n\n      if (self.__extensions__.indexOf(ext) >= 0) {\n        return sum + self.__extensions__.indexOf(ext) + 1;\n      }\n\n      if (aliases.indexOf(ext) >= 0) {\n        return sum + aliases.indexOf(ext) + 11;\n      }\n\n      return sum;\n    }, 0);\n  });\n  </calculateWeights>\n\n  <sortBasedOnWeights>\n  return matches.sort(function(a, b) {\n    return weights[a] > weights[b] ? 1 : -1;\n  });\n  </sortBasedOnWeights>\n}\n"], ["anonymousFunction2", "\nfunction (arr, format) {\n\t\t\tvar out = new modules.ISODate(),\n\t\t\t\ti = 0,\n\t\t\t\tvalue = '';\n\n\t\t\t<parsingDate>\n\t\t\t\n\t\t\tif(arr[0].toUpperCase().match('T')) {\n\t\t\t\treturn new modules.ISODate(arr[0], format);\n\t\t\t}else{\n\t\t\t\tfor(i = 0; i < arr.length; i++) {\n\t\t\t\t\tvalue = arr[i];\n\n\t\t\t\t\t\n\t\t\t\t\tif( value.charAt(4) === '-' && out.hasFullDate() === false ){\n\t\t\t\t\t\tout.parseDate(value);\n\t\t\t\t\t}\n\t\t\t</parsingDate>\n\n\t\t\t<parsingTime>\n\t\t\t\t\t\n\t\t\t\t\tif( (value.indexOf(':') > -1 || modules.utils.isNumber( this.parseAmPmTime(value) )) && out.hasTime() === false ) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar items = this.splitTimeAndZone(value);\n\t\t\t\t\t\tvalue = items[0];\n\n\t\t\t\t\t\tvalue = this.parseAmPmTime(value);\n\t\t\t\t\t\tout.parseTime(value);\n\n\t\t\t\t\t\tif(items.length > 1){\n\t\t\t\t\t\t\tout.parseTimeZone(items[1], format);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t</parsingTime>\n\n\t\t\t<parsingTimeZone>\n\t\t\t\t\t\n\t\t\t\t\tif(value.charAt(0) === '-' || value.charAt(0) === '+' || value.toUpperCase() === 'Z') {\n\t\t\t\t\t\tif( out.hasTimeZone() === false ){\n\t\t\t\t\t\t\tout.parseTimeZone(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t</parsingTimeZone>\n\n\t\t\t\t}\n\t\t\t\t<parseDefaultMinute>\n\t\t\t\tif(out.tM === -1){\n\t\t\t\t\tout.tM = '00';\n\t\t\t\t}\n\t\t\t\t</parseDefaultMinute>\n\t\t\t\treturn out;\n\t\t\t}\n\t\t}\n"], ""]