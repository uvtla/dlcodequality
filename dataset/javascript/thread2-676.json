[["setValue", "\nfunction setValue(descriptor,key,set,update)\n{\n  var _descriptor = descriptor,\n      _key = key,\n      _set = set,\n      _update = update,\n      _oldValue;\n  return function valueSet(v)\n  {\n    _oldValue = _descriptor.value;\n    if(_set(this,_key,v,_oldValue,arguments,this._stopChange))\n    {\n      _descriptor.value = v;\n    }\n    if(!this._stopChange)\n    {\n      _update(this,_key,v,_oldValue,arguments);\n    }\n    this._stopChange = undefined;\n  }\n}\n"], ["compileDebugAppLib", "\nfunction compileDebugAppLib(options) {\n    if (!(options.all || options.app)) {\n        return Promise.resolve();\n    }\n    return new Promise((resolve, reject) => {\n        const filePath = setupConfig('tsconfig.debug.app-lib');\n        <execCompilation>\n        command.exec('tsc', '-p ./tsconfig.debug.app-lib.json')\n        .then(() => {\n            fs.removeSync(filePath);\n            resolve();\n        })\n        </execCompilation>\n        .catch((reason) => {\n            reject(reason);\n        });\n    });\n}\n"], ["numberToDate", "\nfunction numberToDate(value, startMonth) {\n  return getValidDate(\n    +value.slice( 0,  4),\n    +value.slice( 4,  6) || startMonth,\n    +value.slice( 6,  8) || 1,\n    +value.slice( 8, 10),\n    +value.slice(10, 12),\n    +value.slice(12, 14),\n    0);\n}\n"], ["Connection", "\nfunction Connection(conn) {\n\tif(!(this instanceof Connection)) {\n\t\treturn new Connection(conn);\n\t}\n\tvar self = this;\n\tif(!conn) { throw new TypeError(\"no connection set\"); }\n\tself._connection = conn;\n}\n"], ["getIfChildren", "\nfunction getIfChildren(oIfElement) {\n    var oChild,\n        aChildren = Array.prototype.filter.call(oIfElement.childNodes, isElementNode),\n        i, n,\n        bFoundElse = false;\n\n    <isElementNode>\n    function isElementNode(oNode) {\n        return oNode.nodeType === 1;\n    }\n    </isElementNode>\n\n    <isTemplateElement>\n    function isTemplateElement(oElement, sLocalName) {\n        return oElement.namespaceURI === sNAMESPACE\n            && oElement.localName === sLocalName;\n    }\n    </isTemplateElement>\n\n    if (!aChildren.length || !isTemplateElement(aChildren[0], \"then\")) {\n        return null;\n    }\n    <processChildren>\n    for (i = 1, n = aChildren.length; i < n; i += 1) {\n        oChild = aChildren[i];\n        if (bFoundElse) {\n            error(\"Expected </\" + oIfElement.prefix + \":if>, but instead saw \", oChild);\n        }\n        if (isTemplateElement(oChild, \"else\")) {\n            bFoundElse = true;\n        } else if (!isTemplateElement(oChild, \"elseif\")) {\n            error(\"Expected <\" + oIfElement.prefix + \":elseif> or <\"\n                + oIfElement.prefix + \":else>, but instead saw \", aChildren[i]);\n        }\n    }\n    </processChildren>\n    return aChildren;\n}\n"], ["_subclassObject", "\nfunction _subclassObject(tree, base, extension, extName) {\n   <overrideMethods>\n    for (var attrName in extension) {\n        if (typeof extension[attrName] === \"function\") {\n            if (typeof tree[attrName] === \"function\") {\n                tree[attrName] = _makeVirtualFunction(\n                    attrName,\n                    tree,\n                    base,\n                    extension,\n                    extName\n                );\n            } else if (attrName.charAt(0) === \"_\") {\n                tree.ext[extName][attrName] = _makeVirtualFunction(\n                    attrName,\n                    tree,\n                    base,\n                    extension,\n                    extName\n                );\n            } else {\n                $.error(\n                    \"Could not override tree.\" +\n                    attrName +\n                    \". Use prefix '_' to create tree.\" +\n                    extName +\n                    \"._\" +\n                    attrName\n                );\n            }\n        } else {\n           <handleAttributes>\n            if (attrName !== \"options\") {\n                tree.ext[extName][attrName] = extension[attrName];\n            }\n           </handleAttributes>\n        }\n    }\n   </overrideMethods>\n}\n"], ["suggest", "\nfunction suggest (opts) {\n  return new Promise(function (resolve) {\n    <checkOpts>\n    if (!opts && !opts.term) {\n      throw Error('term missing');\n    }\n    </checkOpts>\n\n    return resolve(BASE_URL + encodeURIComponent(opts.term));\n  })\n    .then(url => common.request(url, {}, opts.requestOptions))\n    .then(parseXML)\n    .then(extractSuggestions);\n}\n"], ["requireExtensionJs", "\nfunction requireExtensionJs(sessionId) {\n    var src = 'scripts/user-extensions.js[' + sessionId + ']';\n    if (document.getElementById(src) == null) {\n        <createElement>\n        var scriptTag = document.createElement('script');\n        scriptTag.language = 'JavaScript';\n        scriptTag.type = 'text/javascript';\n        scriptTag.src = src;\n        scriptTag.id = src;\n        scriptTag.charset = 'UTF-8';\n        var headTag = document.getElementsByTagName('head')[0];\n        headTag.appendChild(scriptTag);\n        </createElement>\n    }\n}\n"], ["setup_account_integration", "\nfunction setup_account_integration(api_key, callback) {\n  var keyname = \"/tmp/heroku-key-\" + Math.floor(Math.random() * 1024 * 1024);\n\n  <systemCall>\n  Step(\n    function() {\n      console.log(\"Generating Heroku SSH keypair\");\n      ssh.generate_keypair(keyname, this);\n    },\n    function(code) {\n      console.log(\"Reading Heroku SSH keypair\");\n      fs.readFile(keyname, 'utf8', this.parallel());\n      fs.readFile(keyname + \".pub\", 'utf8', this.parallel());\n    },\n    function(err, privkey, pubkey) {\n      if (err) throw err;\n      this.pubkey = pubkey;\n      this.privkey = privkey;\n      this.user_host_field = pubkey.split(' ')[2].trim();\n      console.log(\"Adding Heroku SSH keypair via API\");\n      add_ssh_key(api_key, pubkey, this);\n    },\n    function(err, r, b) {\n      if (err) throw err;\n      try {\n        fs.unlink(keyname, this.parallel());\n        fs.unlink(keyname + \".pub\", this.parallel());\n      } catch(e) {\n      };\n      console.log(\"Heroku SSH keypair deleted from local FS\");\n      callback(err, this.privkey, this.pubkey, this.user_host_field);\n    }\n  );\n  </systemCall>\n}\n"], ["publishToS3", "\nfunction publishToS3(bucket, simulate, force) {\n\n  if (force) {\n    rimraf.sync('./.awspublish-*');\n  }\n\n  <createPublisher>\n  var publisher = createPublisher(bucket);\n  </createPublisher>\n\n  console.log(`Publishing to ${bucket}`)\n\n  <publishing>\n  var first = publisher.publish({}, {\n    force: force,\n    simulate: simulate === true ? true : false\n  })\n  var cache = null\n  if (!force) {\n    cache = first.pipe(publisher.cache())\n  }\n  var last = (cache || first).pipe(awspublish.reporter())\n  </publishing>\n  return [first, last]\n\n}\n"], "```"]