[["quoteName", "\nfunction quoteName (name) {\n    assert.equal(typeof name, 'string', 'name must be string')\n    assert.ok(!name.match(/`/), 'invalid name')\n    return '`'+name+'`'\n}\n"], ["anonymous", "\nfunction(key) {\n    var self = this;\n    return this.done(function(s) {\n        if (!key)\n            return self._state;\n        var out = self._state[key];\n        return (typeof out === 'undefined') ? deep.Undefined : out;\n    });\n}\n"], ["propChange", "\nfunction propChange( originalEvent, boundElement, namespace ) {\n    <variableInitialization>\n    var lastEventInfo = document.documentElement[ originalEvent.propertyName ],\n        triggeredElement = lastEventInfo.el;\n\n    var boundCheckElement = boundElement;\n    </variableInitialization>\n\n    if( boundElement === document && triggeredElement !== document ) {\n        <adjustBoundCheckElement>\n        boundCheckElement = document.documentElement;\n        </adjustBoundCheckElement>\n    }\n\n    <eventDispatching>\n    if( triggeredElement !== undefined &&\n        shoestring( triggeredElement ).closest( boundCheckElement ).length ) {\n\n        originalEvent._namespace = lastEventInfo._namespace;\n        originalEvent._args = lastEventInfo._args;\n        encasedCallback.call( boundElement, originalEvent, namespace, triggeredElement );\n    }\n    </eventDispatching>\n}\n"], ["anonymous", "\nfunction(list, checks) {\n    var result = !checks || false;\n    if (!result) {\n        list.every(function(a) {\n            if (a.every(function(b, i) {\n                return b === checks[i];\n            })) {\n                result = true;\n            }\n            return !result;\n        });\n    }\n    return result;\n}\n"], ["anonymous", "\nfunction(callback) {\n    this.promises.push(function then(done, utils) {\n        done(null, callback(utils.lastReturn, utils));\n    });\n    return this;\n}\n"], ["anonymous", "\nfunction() {\n    this._unloaded = true;\n    gui.$shutdown();\n    dobroadcast(gui.BROADCAST_TOUNLOAD, gui.BROADCAST_ONUNLOAD);\n    doaction(gui.ACTION_DOC_UNLOAD, location.href);\n}\n"], ["getType", "\nfunction getType(obj) {\n    if (obj === null) return 'null';\n    if (typeof obj === undefined) return 'undefined';\n\n    return Object.prototype.toString.call(obj)\n            .match(/\\s([a-zA-Z]+)/)[1]\n            .toLowerCase();\n}\n"], ["anonymous", "\nfunction () {\n    var oUnderlay = this.underlay,\n        oElement;\n\n    if (oUnderlay) {\n        oElement = this.element;\n        oUnderlay.style.width = oElement.offsetWidth + \"px\";\n        oUnderlay.style.height = oElement.offsetHeight + \"px\";\n    }\n}\n"], ["anonymous", "\nfunction(expression, combinator){\n    if (!expression) return combinator;\n\n    expression = Slick.parse(expression);\n\n    var expressions = expression.expressions;\n    for (var i = expressions.length; i--;)\n        expressions[i][0].combinator = combinator;\n\n    return expression;\n}\n"], ["wrap", "\nfunction wrap(inner, Wrap) {\n    <wrapInitialization>\n    function M(i) {\n        this.inner = i;\n    }\n    if (Wrap === true)\n        Wrap = M;\n    var coerce, unpack, res = {}, ipure = inner.pure, ibind = inner.bind,\n        imap = inner.map, ihandle = inner.handle, iraise = inner.raise,\n        ifin = inner[\"finally\"], ipair = inner.pair, iarr = inner.arr,\n        iplus = inner.plus, ireflect = inner.reflect, ireify = inner.reify,\n        irun = inner.run, ialt = inner.alt, iempty = inner.empty,\n        irepeat = inner.repeat, iforPar = inner.forPar, iblock = inner.block,\n        iscope = inner.scope, icoerce = inner.coerce;\n    </wrapInitialization>\n\n    <wrapImplementation>\n    if (icoerce) {\n        // Implementation of coercion and unpacking methods\n    } else {\n        // Unpacking method without coercion\n    }\n    \n    // Various monadic operations\n    </wrapImplementation>\n\n    return completeMonad(res).cloneDefs();\n}\n"], "```\n\n- The `wrap` function is attempting to define a monadic interface using the methods provided by `inner`, which could be broken down into smaller, more focused responsibilities. This is a complex example, and the breakdown of responsibilities would depend on the principles behind the library or framework this code is part of."]