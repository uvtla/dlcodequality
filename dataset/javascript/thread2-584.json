[["getProxyMiddleware", "\nfunction getProxyMiddleware(context, uri) {\n  const pathRewrite = {};\n  pathRewrite[`^${context}`] = url.parse(uri).pathname;\n\n  return proxy({\n    target: getHost(uri),\n    changeOrigin: true,\n    logLevel: 'warn',\n    pathRewrite: pathRewrite,\n  });\n}\n"], ["ResourcePool", "\nfunction ResourcePool (options) {\n  this.max = options.max || 1;\n  this.maxUses = options.maxUses || 1;\n  this.create = options.create || function () {};\n  this.destroy = options.destroy || function () {};\n  this.active = 0;\n  this.resources = new Array(this.max);\n  this.resourceActive = new Array(this.max);\n  this.resourceUses = new Array(this.max);\n}\n"], ["resolvePageContext", "\nasync function resolvePageContext(request) {\n    \n    const routeSettings = request && request.route && request.route.settings;\n    const app = routeSettings && routeSettings.app;\n\n    \n    const pageContext = clonedeep(app.context);\n\n    \n    const preHandlerResults = Object.values(request.pre);\n    preHandlerResults.reduce(merge, pageContext);\n\n    \n    const pageAdapters = app.adapters;\n    const promises = pageAdapters.map(a => a(pageContext, request));\n    const adapterResults = await Promise.all(promises);\n\n    \n    return adapterResults.reduce(merge, pageContext);\n}\n"], ["iterDeps", "\nfunction iterDeps(method, obj, depKey, seen, meta) {\n\n  var guid = guidFor(obj);\n  if (!seen[guid]) seen[guid] = {};\n  if (seen[guid][depKey]) return;\n  seen[guid][depKey] = true;\n\n  var deps = meta.deps;\n  deps = deps && deps[depKey];\n  if (deps) {\n    for(var key in deps) {\n      if (DEP_SKIP[key]) continue;\n      method(obj, key);\n    }\n  }\n}\n"], ["disableCharacteristicNotification", "\nfunction (successCallback, errorCallback, deviceHandle, charHandle) {\n  \n  winble.logger.logDebug(\"disableCharacteristicNotification\", \"deviceHandle='\" + deviceHandle + \", charHandle='\" + charHandle + \"'\");\n\n  \n  var device = winble.deviceManager.getDeviceFromHandle(deviceHandle, \"disableCharacteristicNotification\", errorCallback);\n  if (device == null)\n    return;\n\n  \n  var characteristic = winble.deviceManager.getCharacteristicFromHandle(device, charHandle, \"disableCharacteristicNotification\", errorCallback);\n  if (characteristic == null)\n    return;\n\n  \n  try {\n    characteristic.gattChar.removeEventListener(\"valuechanged\", characteristic.onValueChanged, false);\n  } catch (e) {\n    var msg = \"Could not remove event listener:\" + e;\n    winble.logger.logError(\"disableCharacteristicNotification\", msg);\n    errorCallback(msg);\n    return;\n  }\n}\n"], ["isSelfParent", "\nfunction isSelfParent (win) {\n  let page = win.MIP.viewer.page\n  return page.isRootPage ||  page.isCrossOrigin\n}\n"], ["docCtrl-renderer", "\nfunction(docCtrl, renderer) {\n  \n  View.call(this);\n\n  this.docCtrl = docCtrl;\n  this.renderer = renderer;\n  this.document = docCtrl.session.document;\n  this.nodeTypes = this.document.nodeTypes;\n  this.nodeViews = this.renderer.nodeViews;\n  this.$el.addClass('surface');\n  this.listenTo(this.document, \"property:updated\", this.onUpdateView);\n  this.listenTo(this.document, \"graph:reset\", this.reset);\n  \n  this.$el.blur(this.onBlur.bind(this));\n  this.__lastFocussed = null;\n}\n"], ["toPrecision", "\nfunction toPrecision( number, places, truncation ) {\n  \n  \n  const MAX_SIGNIFICANT_PLACES = 14;\n  const actualPlaces = truncation === 'NONE' ? MAX_SIGNIFICANT_PLACES : places;\n  if( actualPlaces === 0 ) {\n    return `${Math.round( number )}`;\n  }\n  const multiplier = Math.pow( 10, actualPlaces );\n  let str = `${Math.round( number * multiplier ) / multiplier}`;\n  const absNumber = Math.abs( number );\n  if( absNumber < 0.0001 ) {\n    const exponent = parseInt( str.split( 'e-' )[ 1 ], 10 );\n    if( exponent ) {\n      const base = `${Math.pow( 10, exponent - 1 ) * Math.round( absNumber * multiplier ) / multiplier}`;\n      str = `${number < 0 ? '-' : ''}0.${zeros( exponent - 1 ) + base.substring( 2 )}`;\n    }\n  }\n  if( truncation === 'BOUNDED' || truncation === 'NONE' ) {\n    return str;\n  }\n  const tmp = str.split( '.' );\n  if( tmp.length === 1 ) {\n    return `${str}.${zeros( actualPlaces )}`;\n  }\n  return str + zeros( actualPlaces - tmp[ 1 ].length );\n}\n"], ["classesImmediate", "\nfunction classesImmediate() {\n  let result = \"\"\n  for (let i=0, n=arguments.length; i<n; ++i) {\n    const a = arguments[i]\n    if (a) {\n      if (result)\n        result += \" \"\n      result += a\n    }\n  }\n  return result\n}\n"], ["UnnamedFunction", "\nfunction() {\n  this.divEl = inputEx.cn('div', {className: this.options.className});\n  if(this.options.id) {\n    this.divEl.id = this.options.id;\n  }\n  this.renderFields(this.divEl);\n  if(this.options.disabled) {\n    this.disable();\n  }\n}\n"], ""]