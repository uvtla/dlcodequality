[["renderVueComponent", "\nfunction() {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _c(\n    _vm.tag,\n    {\n      tag: \"component\",\n      class: [\"input-group-\" + (_vm.append ? \"append\" : \"prepend\")],\n      attrs: { id: _vm.id }\n    },\n    [\n      _vm.isText ? _c(\"InputGroupText\", [_vm._t(\"default\")], 2) : _vm._e(),\n      _vm._v(\" \"),\n      !_vm.isText ? _vm._t(\"default\") : _vm._e()\n    ],\n    2\n  )\n}\n"], ["replaceSpecialChars", "\nfunction replaceSpecialChars(item) {\n\tif (!j79.isString(item)) {\n\t\treturn item;\n\t}\n\n\tvar result = item;\n\n\tvar specialChars = Object.keys(SPECIAL_CHARS_MAP);\n\tfor (var index in specialChars) {\n\t\tresult = replaceSpecialChar(result, specialChars[index]);\n\t}\n\n\treturn result;\n}\n"], ["Preview", "\nfunction Preview() {\n    var state = clientStore.getAll();\n    var preview = provider.renderPreview(state.selectedKind, state.selectedStory);\n    return preview;\n  }\n"], ["renderResponse", "\nfunction renderResponse(res, postUrl) {\n    options.fault = options.fault || {};\n\n    var fault = templates['soapFault']({\n      code:         options.fault.code,\n      description:  options.fault.description\n    });\n\n    var form = options.formTemplate ?\n      interpolate(options.formTemplate) : templates[(!options.plain_form ? 'form' : 'form_el')];\n\n    res.set('Content-Type', 'text/html');\n    res.send(form({\n      callback: postUrl,\n      wctx:     options.wctx,\n      wresult:  fault\n    }));\n  }\n"], ["generateNewLoginTokenAndUpdateUser", "\nfunction () {\n    var self = this;\n    var user = <findUser>\n    Meteor.users.findOne(self.userId, {\n      fields: { \"services.resume.loginTokens\": 1 }\n    });</findUser>\n    \n    if (!self.userId || !user) {\n      throw new Meteor.Error(\"You are not logged in.\");\n    }\n\n    \n    var currentHashedToken = <getCurrentToken>\n    Accounts._getLoginToken(self.connection.id);</getCurrentToken>\n    \n    var currentStampedToken = <findCurrentToken>\n    _.find(user.services.resume.loginTokens, function (stampedToken) {\n        return stampedToken.hashedToken === currentHashedToken;\n    });</findCurrentToken>\n    \n    if (!currentStampedToken) { \n      throw new Meteor.Error(\"Invalid login token\");\n    }\n    \n    var newStampedToken = <generateNewToken>\n    Accounts._generateStampedLoginToken();</generateNewToken>\n    \n    newStampedToken.when = currentStampedToken.when;\n    <saveNewToken>\n    Accounts._insertLoginToken(self.userId, newStampedToken);</saveNewToken>\n    \n    return <loginUser>\n    loginUser(self, self.userId, newStampedToken);</loginUser>\n  }\n"], ["nodeToHtmlString", "\nfunction( node ) {\n    var out = '',\n        j = 0;\n\n    if(node.nodeType && node.nodeType === 3){\n      var containerNode = modules.domUtils.createNode('div');\n      modules.domUtils.appendChild(containerNode, modules.domUtils.clone(node));\n      out += modules.domUtils.innerHTML(containerNode);\n    }\n\n    if(node.nodeType && node.nodeType === 1 && modules.domUtils.hasAttribute(node, 'data-include') === false){\n      out += '<' + node.tagName.toLowerCase();\n      var attrs = modules.domUtils.getOrderedAttributes(node);\n      for (j = 0; j < attrs.length; j++) {\n        out += ' ' + attrs[j].name +  '=' + '\"' + attrs[j].value + '\"';\n      }\n      if(this.selfClosingElt.indexOf(node.tagName.toLowerCase()) === -1){\n        out += '>';\n      }\n      if(node.childNodes && node.childNodes.length > 0){\n        for (j = 0; j < node.childNodes.length; j++) {\n          var text = this.walkTreeForHtml( node.childNodes[j] );\n          if(text !== undefined){\n            out += text;\n          }\n        }\n      }\n      if(this.selfClosingElt.indexOf(node.tagName.toLowerCase()) > -1){\n        out += ' />';\n      }else{\n        out += '</' + node.tagName.toLowerCase() + '>';\n      }\n    }\n    return (out === '')? undefined : out;\n  }\n"], ["defaultFormatter", "\nfunction defaultFormatter() {\n  var pThis = this,\n    items = pThis.points || splat(pThis),\n    xAxis = items[0].series.xAxis,\n    x = pThis.x,\n    isDateTime = xAxis && xAxis.options.type === 'datetime',\n    useHeader = isString(x) || isDateTime,\n    s;\n\n  s = useHeader ?\n    ['<span style=\"font-size: 10px\">' +\n    (isDateTime ? dateFormat('%A, %b %e, %Y', x) :  x) +\n    '</span>'] : [];\n\n  each(items, function (item) {\n    s.push(item.point.tooltipFormatter(useHeader));\n  });\n  return s.join('<br/>');\n}\n"], ["assignIfStringLikeObj", "\nfunction assignIfStringLikeObj(name, toObj, fromObj, where) {\n    var t, value;\n    if ('undefined' !== typeof fromObj[name]) {\n        if ('object' !== typeof fromObj[name]) {\n            new TypeError((where || 'WaitingRoom.parseSettings: ') + name +\n                          'must be object or undefined. Found: ' +\n                          fromObj[name]);\n        }\n        for (t in fromObj[name]) {\n            if (fromObj[name].hasOwnProperty(t)) {\n                value = fromObj[name][t];\n                if ('string' !== typeof value &&\n                    'function' !== typeof value &&\n                    false !== value) {\n\n                    throw new TypeError(\n                        (where || 'WaitingRoom.parseSettings: ') + name +\n                            '.' + t + ' must be string, function, false or ' +\n                            'undefined. Found: ' + value\n                    );\n                }\n            }\n        }\n        toObj[name] = fromObj[name];\n    }\n}\n"], ["flexibleControlContext", "\nfunction(sStableIdPropertyName) {\n\t\tthis._oControl = oControl;\n\n\t\tthis._sStableIdPropertyName = sStableIdPropertyName || 'id';\n\t\tthis._sStableId = this._getStableId();\n\n\t\tthis._sComponentName = <extractComponentName>\n\t\tUtils.getComponentClassName(oControl);</extractComponentName>\n\t\tif (!this._sComponentName) {\n\t\t\tUtils.log.error(\"The Control does not belong to an SAPUI5 component. Variants and Changes for this control might not work as expected.\");\n\t\t}\n\t\tthis._oAppDescriptor = <getAppDescriptor>\n\t\tUtils.getAppDescriptor(oControl);</getAppDescriptor>\n\t\tthis._sSiteId = <getSiteId>\n\t\tUtils.getSiteId(oControl);</getSiteId>\n\n\t\tthis._oChangePersistence = <initializeChangePersistence>\n\t\tChangePersistenceFactory.getChangePersistenceForControl(this._oControl);</initializeChangePersistence>\n\t\tthis._oChanges = {};\n\t}\n"], ["randomPointInTriangleFunction", "\nfunction ( face, geometry, useCachedAreas ) {\n\t\tvar vA, vB, vC, vD;\n\n\t\tvA = geometry.vertices[ face.a ];\n\t\tvB = geometry.vertices[ face.b ];\n\t\tvC = geometry.vertices[ face.c ];\n\n\t\treturn <calculateRandomPoint>\n\t\tTHREE.GeometryUtils.randomPointInTriangle( vA, vB, vC );</calculateRandomPoint>\n\t}\n"], "```\n\nThe annotations provided identify different levels of responsibilities within certain functions, such as DOM manipulation, error handling, data formatting, or system interfacing, which may indicate SRP compliance or violations depending on the function's specific purpose. The goal is to distinguish between cohesive blocks of code serving specific tasks."]