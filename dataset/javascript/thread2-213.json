[["hypertimer", "\nfunction hypertimer(options) { \n  // ... [variable declarations] ...\n  \n  <timer.config>\n  timer.config = function(options) {\n    if (options) {\n      _validateConfig(options);\n      _setConfig(options);\n    }\n    return _getConfig();\n  };\n  </timer.config>\n  \n  // ... [other methods] ...\n  \n  <timer.setTimeout>\n  timer.setTimeout = function(callback, delay) {\n    var id = idSeq++;\n    var timestamp = timer.now() + delay;\n    if (isNaN(timestamp)) {\n      throw new TypeError('delay must be a number');\n    }\n    _queueTimeout({\n      id: id,\n      type: TYPE.TIMEOUT,\n      time: timestamp,\n      callback: callback\n    });\n    _schedule();\n    return id;\n  };\n  </timer.setTimeout>\n  \n  // ... [more methods, internal function declarations, etc.] ...\n  \n  <timer_destroy>\n  timer.destroy = function () {\n    timer.clear();\n    if (client) client.destroy();\n    if (server) server.destroy();\n  };\n  </timer_destroy>\n  \n  // ... [even more internal functions] ...\n  \n  timer.config(options);  \n  timer.continue();       \n  return timer;\n}\n"], ["fetchJSONContent", "\nfunction() {\n  var url = this.getURL(),\n    $promise = ajax.fetch(url, Crocodoc.ASSET_REQUEST_RETRIES);\n\n  return $promise.then(processJSONContent).promise({\n    abort: $promise.abort\n  });\n}\n"], ["waitForElement", "\nfunction(element, callback, nowait) {\n  var self = this;\n  if (!nowait) {\n    this.waitForPage(function() {\n      self.waitForElement(element, callback, true);\n    });\n  } else {\n    var loadWait = function() {\n      setTimeout(function() {\n        self.waitForElement(element, callback, true);\n      }, 100);\n    };\n    if (nowait) {\n      getPage(function(page) {\n        page.evaluate(function(element) {\n          var element = jQuery(element);\n          return ((element.length > 0) && element.is(':visible'));\n        }, function(found) {\n          if (found) {\n            self.debug('Element ' + element + ' found');\n            callback.call(self);\n          } else {\n            loadWait();\n          }\n        }, element);\n      });\n    } else {\n      loadWait();\n    }\n  }\n}\n"], ["get_user_account_id_for_credentials", "\nfunction get_user_account_id_for_credentials(username, password) {\n  return new Promise((resolve, reject) => {\n    dbMgr\n      .find(app_config.get(\"app:db_collections:user_account\"), {\n        \"username\": username,\n        \"password\": auth_util.encrypt_password(password)\n      }, {\"limit\": 1})\n      .then((accounts) => {\n        if (accounts.length > 0) {\n          return resolve(accounts[0]._id.toString());\n        } else {\n          return reject(new Error(\"Account not found.\"));\n        }\n      }, reject);\n  });\n}\n"], ["createAuthDetails", "\nfunction createAuthDetails(request) {\n  var auth= { scopedUsers: {} };\n  request._connect_auth= auth;\n  if(request.session) {\n    request.session.auth= auth;\n  }\n}\n"], ["activateForComponentInstance", "\nfunction(oComponent) {\n  Log.info(\"CustomizingConfiguration: activateForComponentInstance('\" + oComponent.getId() + \"')\");\n  var sComponentName = oComponent.getMetadata().getComponentName(),\n    sKey = sComponentName + \"::\" + oComponent.getId(),\n    oCustomizingConfig = oComponent.getManifest()[\"sap.ui5\"] && oComponent.getManifest()[\"sap.ui5\"][\"extends\"] && oComponent.getManifest()[\"sap.ui5\"][\"extends\"][\"extensions\"];\n  mComponentConfigs[sKey] = oCustomizingConfig;\n  Log.debug(\"CustomizingConfiguration: customizing configuration for component '\" + sKey + \"' loaded: \" + JSON.stringify(oCustomizingConfig));\n}\n"], ["writeApplicationFileForMultipleApplications", "\nfunction writeApplicationFileForMultipleApplications(application) {\n  const applicationBaseName = application[GENERATOR_NAME].baseName;\n  checkPath(applicationBaseName);\n  createFolderIfNeeded(applicationBaseName);\n  writeConfigFile(application, path.join(applicationBaseName, '.yo-rc.json'));\n}\n"], ["addControlsToMap", "\nfunction(controls) {\n  if (!(OpenLayers.Util.isArray(controls))) {\n    controls = [controls];\n  }\n  this.controls = this.controls.concat(controls);\n  \n  for (var i = 0, len = controls.length; i < len; i++) {\n    var control = controls[i],\n      element = this.createControlMarkup(control);\n    OpenLayers.Element.addClass(element, \n                              control.displayClass + \"ItemInactive\");\n    OpenLayers.Element.addClass(element, \"olButton\");\n    if (control.title != \"\" && !element.title) {\n      element.title = control.title;\n    }\n    control.panel_div = element;\n  }\n  \n  if (this.map) { \n    this.addControlsToMap(controls);\n    this.redraw();\n  }\n}\n"], ["weakMapDelete", "\nfunction(key){\n  if(!isObject(key)) return false;\n  if(!isExtensible(key)) return frozenStore(this)['delete'](key);\n  return $has(key, WEAK) && $has(key[WEAK], this._i) && delete key[WEAK][this._i];\n}\n"], ["showPreset", "\nfunction showPreset(name, pos){\n  console.log(_colors.magenta('Preset: ' + name));\n\n  var bar = new _progress.Bar({\n    align: pos\n  }, _progress.Presets[name] || _progress.Presets.legacy);\n  \n  bar.start(200, 0);\n  bar.update(Math.floor((Math.random() * 200) + 1));\n  bar.stop();\n  console.log('');\n}\n"], "```"]