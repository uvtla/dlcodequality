[["uncheckVisibleCheckboxes", "\nfunction (justVisible) {\n    var justVisible = typeof justVisible === 'undefined' ? true : justVisible;\n\n    if(justVisible) {\n        var visibleCheckboxes = $(\"li input[type='checkbox']:not(:disabled)\", this.$ul).filter(\":visible\");\n        visibleCheckboxes.prop('checked', false);\n\n        var values = visibleCheckboxes.map(function() {\n            return $(this).val();\n        }).get();\n\n        $(\"option:enabled\", this.$select).filter(function(index) {\n            return $.inArray($(this).val(), values) !== -1;\n        }).prop('selected', false);\n\n        if (this.options.selectedClass) {\n            $(\"li:not(.divider):not(.disabled)\", this.$ul).filter(\":visible\").removeClass(this.options.selectedClass);\n        }\n    }\n    else {\n        $(\"li input[type='checkbox']:enabled\", this.$ul).prop('checked', false);\n        $(\"option:enabled\", this.$select).prop('selected', false);\n\n        if (this.options.selectedClass) {\n            $(\"li:not(.divider):not(.disabled)\", this.$ul).removeClass(this.options.selectedClass);\n        }\n    }\n}\n"], ["injectGlobPatterns", "\nfunction requireGlobInjectables(pattern) {\n    return _.map(glob.sync(pattern), function (file) {\n        return injectableFromFile(file);\n    });\n}\n"], ["calculateChecksum", "\nfunction calcWeak32(data, prev, start, end) {\n  var a = 0;\n  var b = 0;\n  var M = 1 << 16;\n  var N = 65521;\n\n  if (!prev) {\n    var len = (start >= 0 && end >= 0) ? (end - start + 1) : data.length;\n    var datai;\n    for (var i = 0; i < len; i++) {\n      datai = data[i];\n      a += datai;\n      b += ((len - i) * datai);\n    }\n\n    a %= N;\n    b %= N;\n  } else {\n    var k = start;\n    var l = end - 1;\n    var prev_k = k - 1;\n    var prev_l = l - 1;\n    var prev_first = data[prev_k];\n    var curr_last = data[l];\n\n    a = (prev.a - prev_first + curr_last) % N;\n    b = (prev.b - (prev_l - prev_k + 1) * prev_first + a) % N;\n  }\n  return { a: a, b: b, sum: a + b * M };\n}\n"], ["formatAndConcatenateNumbers", "\nfunction(numbers) {\n    if (numbers.length < 2) {\n      return moment()._locale.ordinal(numbers);\n    }\n\n    var last_val = numbers.pop();\n    return numbers.join(', ') + ' and ' + moment()._locale.ordinal(last_val);\n}\n"], ["parseCircularReference", "\nfunction parseCircular(object) {\n  \n  if (!config().circularRefs) {\n    return object;\n  }\n\n  let pointerPath = parsePointer(object.$ref);\n\n  \n  for (let i = 0; i < pointerPath.length; i++) {\n    if (pointerPath[i] !== path[i]) {\n      throw new Error('Invalid circular reference \"' +  object.$ref + '\"');\n    }\n  }\n\n  return stack[pointerPath.length];\n}\n"], ["createErrorWithStatus", "\nfunction error(status, msg) {\n  var err = new Error(msg);\n  err.status = status;\n  return err;\n}\n"], ["dispatchEvent", "\nfunction(type, data) {\n    if (gui.Type.isString(type)) {\n        return this._dispatch({\n            type: type,\n            data: data,\n            global: false\n        });\n    } else {\n        console.error('The \"target\" argument (the first argument) of gui.Broadcast.dispatch is deprecated');\n        this.dispatch(arguments[1], arguments[2]);\n    }\n}\n"], ["getElementPosition", "\nfunction (el) {\n    var offsets = el.getPosition(); \n    return {\n        left: offsets.x,\n        top: offsets.y\n    };\n}\n"], ["setupRenderBufferStorage", "\nfunction setupRenderBufferStorage( renderbuffer, renderTarget ) {\n\n    _gl.bindRenderbuffer( 36161, renderbuffer );\n\n    if ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n        _gl.renderbufferStorage( 36161, 33189, renderTarget.width, renderTarget.height );\n        _gl.framebufferRenderbuffer( 36160, 36096, 36161, renderbuffer );\n\n    } else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n        _gl.renderbufferStorage( 36161, 34041, renderTarget.width, renderTarget.height );\n        _gl.framebufferRenderbuffer( 36160, 33306, 36161, renderbuffer );\n\n    } else {\n\n        _gl.renderbufferStorage( 36161, 32854, renderTarget.width, renderTarget.height );\n\n    }\n\n    _gl.bindRenderbuffer( 36161, null );\n\n}\n"], ["augmentFunctionExecution", "\nfunction after(f, after, changeRet){\n    \n    return changeRet ?\n        function after_CRet(){\n            return after.apply(this,[f.apply(this,arguments)].concat(makeArray(arguments)));\n        }:\n        function after_Ret(){\n            var ret = f.apply(this,arguments);\n            after.apply(this,arguments);\n            return ret;\n        }\n}\n"], ""]