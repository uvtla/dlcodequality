[["add", "\nfunction add(x, y) {\n    if (!retTable[x + \",\" + y]) {\n      retTable[x + \",\" + y] = true;\n      retArray.push([x, y]);\n    }\n}\n"], ["partial", "\nfunction partial(view, opts) {\n\tvar collection, object, locals, name;\n\n\tif (opts) {\n\t\tif (opts.collection) {\n\t\t\tcollection = opts.collection;\n\t\t\tdelete opts.collection;\n\t\t} else if ('length' in opts) {\n\t\t\tcollection = opts;\n\t\t\topts = {};\n\t\t}\n\n\t\tif (opts.locals) {\n\t\t\tlocals = opts.locals;\n\t\t\tdelete opts.locals;\n\t\t}\n\n\t\tif ('Object' != opts.constructor.name) {\n\t\t\tobject = opts;\n\t\t\topts = {};\n\t\t} else if (opts.object !== undefined) {\n\t\t\tobject = opts.object;\n\t\t\tdelete opts.object;\n\t\t}\n\t} else {\n\t\topts = {};\n\t}\n\n\tlet options = {\n\t\tENTRY: opts\n\t};\n\n\tif (locals)\n\t\toptions.__proto__ = locals;\n\n\tfor (var k in this)\n\t\toptions[k] = options[k] || this[k];\n\n\tname = options.as || resolveObjectName(view);\n\n\tvar root = _dirname(options.filename),\n\t\tfile = lookup(root, view, options),\n\t\tkey = file + ':string';\n\tif (!file)\n\t\tthrow new Error('Could not find partial ' + view);\n\n\tvar source = options.cache ?\n\t\tcache[key] || (cache[key] = fs.readFileSync(file, 'utf8')) :\n\t\tcache[key] = fs.readFileSync(file, 'utf8');\n\n\toptions.filename = file;\n\n\toptions.partial = partial.bind(options);\n\n\t\n\tfunction render() {\n\t\tif (object) {\n\t\t\tif ('string' == typeof name) {\n\t\t\t\toptions[name] = object;\n\t\t\t} else if (name === global) {\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\tvar html = ejs.render(source, options);\n\t\treturn html;\n\t}\n\n\tif (collection) {\n\t\tvar len = collection.length,\n\t\t\tbuf = '',\n\t\t\tkeys, prop, val, i;\n\n\t\tif ('number' == typeof len || Array.isArray(collection)) {\n\t\t\toptions.collectionLength = len;\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tval = collection[i];\n\t\t\t\toptions.firstInCollection = i === 0;\n\t\t\t\toptions.indexInCollection = i;\n\t\t\t\toptions.lastInCollection = i === len - 1;\n\t\t\t\tobject = val;\n\t\t\t\tbuf += render();\n\t\t\t}\n\t\t} else {\n\t\t\tkeys = Object.keys(collection);\n\t\t\tlen = keys.length;\n\t\t\toptions.collectionLength = len;\n\t\t\toptions.collectionKeys = keys;\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tprop = keys[i];\n\t\t\t\tval = collection[prop];\n\t\t\t\toptions.keyInCollection = prop;\n\t\t\t\toptions.firstInCollection = i === 0;\n\t\t\t\toptions.indexInCollection = i;\n\t\t\t\toptions.lastInCollection = i === len - 1;\n\t\t\t\tobject = val;\n\t\t\t\tbuf += render();\n\t\t\t}\n\t\t}\n\n\t\treturn buf;\n\t} else {\n\t\treturn render();\n\t}\n}\n"], ["unnamed", "\nfunction(json) {\n        var stats, shaved, kb;\n\n        this._showOutputDebug(json.warnings, 'warning', this.console.warn);\n        this._showOutputDebug(json.errors, 'error', this.console.error);\n\n        if (json.statistics) {\n\n            stats = json.statistics;\n            shaved = (100 - (stats.compressedSize / stats.originalSize * 100)).toPrecision(3);\n            kb = function(bytes) {\n                return Math.round(bytes / 10.24) / 100 + ' KB';\n            };\n\n            this.console.info();\n            this.console.info('      Original', kb(stats.originalSize));\n            this.console.info('    Compressed', kb(stats.compressedSize));\n            this.console.info('     + GZipped', kb(stats.compressedGzipSize));\n            this.console.info('       Reduced', shaved + '%');\n            this.console.info();\n        }\n    }\n"], ["Lock", "\nfunction Lock(consul, opts) {\n  events.EventEmitter.call(this);\n\n  opts = utils.normalizeKeys(opts);\n\n  this.consul = consul;\n  this._opts = opts;\n  this._defaults = utils.defaultCommonOptions(opts);\n\n  if (opts.session) {\n    switch (typeof opts.session) {\n      case 'string':\n        opts.session = { id: opts.session };\n        break;\n      case 'object':\n        opts.session = utils.normalizeKeys(opts.session);\n        break;\n      default:\n        throw errors.Validation('session must be an object or string');\n    }\n  } else {\n    opts.session = {};\n  }\n\n  if (!opts.key) {\n    throw errors.Validation('key required');\n  } else if (typeof opts.key !== 'string') {\n    throw errors.Validation('key must be a string');\n  }\n}\n"], ["_initNavigationMenuItems", "\nfunction _initNavigationMenuItems() {\n    var menu = Menus.getMenu(Menus.AppMenuBar.NAVIGATE_MENU);\n    menu.addMenuItem(NAVIGATION_JUMP_BACK, \"\", Menus.AFTER, Commands.NAVIGATE_PREV_DOC);\n    menu.addMenuItem(NAVIGATION_JUMP_FWD, \"\", Menus.AFTER, NAVIGATION_JUMP_BACK);\n}\n"], ["unnamed_destroy", "\nfunction() {\n    if (this.imgDiv)  {\n        this.clear();\n        this.imgDiv = null;\n        this.frame = null;\n    }\n    \n    this.asyncRequestId = null;\n    OpenLayers.Tile.prototype.destroy.apply(this, arguments);\n}\n"], ["updateAllDeps", "\nfunction updateAllDeps (pPackageObject, pOutdatedPackages = {}, pOptions = {}) {\n  return Object.assign(\n    {},\n    pPackageObject,\n    Object.keys(pPackageObject)\n      .filter(pPkgKey => pPkgKey.includes('ependencies'))\n      .reduce(\n        (pAll, pDepKey) => {\n          pAll[pDepKey] = updateDeps(pPackageObject[pDepKey], pOutdatedPackages, pOptions)\n          return pAll\n        },\n        {}\n      )\n  )\n}\n"], ["unnamed_loadCSS", "\nfunction(file) {\n    var link = document.createElement(\"link\")\n    link.href = file\n    link.type = \"text/css\"\n    link.rel = \"stylesheet\"\n    link.media = \"screen,print\"\n    document.getElementsByTagName(\"head\")[0].appendChild(link)\n  }\n"], ["translate", "\nfunction translate(key, options, hasOwnOptions) {\n\t\t\tvar lng = options.lng || 'auto';\n\t\t\tif (!translations[lng]) {\n\t\t\t\ttranslations[lng] = {};\n\t\t\t}\n\t\t\tif (!t) {\n\t\t\t\ttranslations[lng][key] = 'defaultLoadingValue' in options ? options.defaultLoadingValue :\n\t\t\t\t\t'defaultValue' in options ? options.defaultValue :\n\t\t\t\t\t'defaultLoadingValue' in globalOptions ? globalOptions.defaultLoadingValue : key;\n\t\t\t} else if (!translations[lng][key] or hasOwnOptions) {\n\t\t\t\ttranslations[lng][key] = t(key, options);\n\t\t\t}\n\t\t}\n"], ["processComponent", "\nfunction processComponent (tagged_rule, returnObj) {\n    tagged_rule.metadata = {\n        global: false,\n        complete: false,\n        status: \"dev\"\n    };\n\n    var metadata_info = getTaggedCommentInfo(tagged_rule);\n    $.extend(tagged_rule.metadata, metadata_info);\n\n    if (tagged_rule.metadata.tags) {\n        var tag;\n        var is_base = false;\n        for (var t = 0; t < tagged_rule.metadata.tags.length; t++) {\n            tag = tagged_rule.metadata.tags[t];\n            if (!returnObj.tags_hash[tag]) {\n                returnObj.tags_hash[tag] = [];\n                returnObj.tags.push(tag);\n            }\n            returnObj.tags_hash[tag].push(tagged_rule);\n\n            if (tag == \"base\") {\n                is_base = true;\n            }\n        }\n\n        for (var t = 0; t < tagged_rule.metadata.tags.length; t++) {\n            tag = tagged_rule.metadata.tags[t];\n\n            if (is_base) {\n                if (!returnObj.base_tags_hash[tag]) {\n                    returnObj.base_tags_hash[tag] = [];\n                    returnObj.base_tags.push(tag);\n                }\n                returnObj.base_tags_hash[tag].push(tagged_rule.uuid);\n            } else {\n                if (!returnObj.design_tags_hash[tag]) {\n                    returnObj.design_tags_hash[tag] = [];\n                    returnObj.design_tags.push(tag);\n                }\n                returnObj.design_tags_hash[tag].push(tagged_rule.uuid);\n            }\n        }\n    }\n    __processExample(tagged_rule);\n\n    if (\n        tagged_rule.metadata.example &&\n        tagged_rule.metadata.status\n    ) {\n        returnObj.totals.tagged_completed++;\n        tagged_rule.metadata.complete = true;\n    } else {\n        returnObj.incomplete_tagged_rules.push(tagged_rule.uuid);\n    }\n\n    returnObj.totals.tagged_rules++;\n    returnObj.tagged_rules.push(tagged_rule);\n    if (!returnObj.totals.depths_tagged[tagged_rule.depth])\n        returnObj.totals.depths_tagged[tagged_rule.depth] = 0;\n    returnObj.totals.depths_tagged[tagged_rule.depth]++;\n}\n"], ""]