[["unknownFunction1", "\nfunction(data, cb) {\n        async.series([\n            <manageChildProcesses>\n            cntUtils.many('shutdownChild', unknown(), data),\n            cntUtils.many('checkAndRestartChild', childrenSpecObj, data, true)\n            </manageChildProcesses>\n        ], cb);\n    }\n"], ["validateParameters", "\nfunction validateParameters (api, path, pathId, operation, operationId) {\n  <initializeParameters>\n  var pathParams = path.parameters || [];\n  var operationParams = operation.parameters || [];\n  </initializeParameters>\n  \n  <checkPathParamsDuplicates>\n  try {\n    checkForDuplicates(pathParams);\n  }\n  catch (e) {\n    throw ono.syntax(e, \"Validation failed. %s has duplicate parameters\", pathId);\n  }\n  </checkPathParamsDuplicates>\n\n  <checkOperationParamsDuplicates>\n  try {\n    checkForDuplicates(operationParams);\n  }\n  catch (e) {\n    throw ono.syntax(e, \"Validation failed. %s has duplicate parameters\", operationId);\n  }\n  </checkOperationParamsDuplicates>\n\n  <combineValidateParams>\n  \n  var params = pathParams.reduce(function (combinedParams, value) {\n    var duplicate = combinedParams.some(function (param) {\n      return param.in === value.in && param.name === value.name;\n    });\n    if (!duplicate) {\n      combinedParams.push(value);\n    }\n    return combinedParams;\n  }, operationParams.slice());\n\n  validateBodyParameters(params, operationId);\n  validatePathParameters(params, pathId, operationId);\n  validateParameterTypes(params, api, operation, operationId);\n  </combineValidateParams>\n}\n"], ["copyFile", "\nfunction copyFile(from, to) {\n  \n  return new Promise((resolve, reject) => {\n    <fileCopying>\n    fs.copyFile(from, to, (err) => {\n      if (err) {\n        reject(err);\n        return;\n      }\n      resolve(to);\n    });\n    </fileCopying>\n  });\n}\n"], ["cacheDom", "\nfunction(el, document) {\n            var self    = this;\n\n            <beforeCacheDom>\n            self.callActions('beforeCacheDom', arguments);\n            </beforeCacheDom>\n\n            <cacheElements>\n            self.dom.document  = document;\n            self.dom.body      = self.dom.document.querySelector('body');\n            self.dom.container = el;\n            self.dom.parent    = el;\n            </cacheElements>\n\n            <afterCacheDom>\n            self.callActions('afterCacheDom', arguments);\n            </afterCacheDom>\n        }\n"], ["getVersionTags", "\nfunction getVersionTags() {\n\t<gitCommand>\n\tvar tags = exec('git tag', { silent: true }).output.trim().split(/\\n/g);\n\t</gitCommand>\n\n\t<filterAndSortTags>\n\treturn tags.reduce(function(list, tag) {\n\t\tif (semver.valid(tag)) {\n\t\t\tlist.push(tag);\n\t\t}\n\t\treturn list;\n\t}, []).sort(semver.compare);\n\t</filterAndSortTags>\n}\n"], ["handleElseStatement", "\nfunction (out, statement) {\n                    <checkElseContext>\n                    var ifstruct = statement.parent;\n                    if (ifstruct.name != \"if\") {\n                        return out.logError(statement, statementsSingleton.ELSE_WITHOUT_IF);\n                    } else if (ifstruct[Aria.FRAMEWORK_PREFIX + \"elsepresent\"]) {\n                        return out.logError(statement, statementsSingleton.ELSE_ALREADY_USED);\n                    }\n                    ifstruct[Aria.FRAMEWORK_PREFIX + \"elsepresent\"] = true;\n                    </checkElseContext>\n\n                    <outputElseBlock>\n                    out.decreaseIndent();\n                    out.writeln(\"} else {\");\n                    out.increaseIndent();\n                    </outputElseBlock>\n                }\n"], ["takePhoto", "\nfunction takePhoto () {\n  <setupConfiguration>\n  let sizeFactor = 1;\n  let imageType = IMAGE_TYPES.JPG;\n  let imageCompression = 1;\n\n  let config = {\n    sizeFactor,\n    imageType,\n    imageCompression\n  };\n  </setupConfiguration>\n\n  <capturePhoto>\n  let dataUri = cameraPhoto.getDataUri(config);\n  imgElement.src = dataUri;\n  </capturePhoto>\n}\n"], ["scheduleSearch", "\nfunction scheduleSearch( country, date, callback ) {\n    <buildUrl>\n    var url = apiBaseUrl+endpoints['schedule'].replace('$1', country).replace('$2', date);\n    </buildUrl>\n\n    <performFetch>\n    fetch(url, function(result) {\n        callback(result);\n    });\n    </performFetch>\n}\n"], ["EventHandlerAccept", "\nfunction EventHandlerAccept (device, data){\n        <logAction>\n        console.log (\"#%d- Action Devid:[%s] Name:[%s] Cmd:[%s] Lat:%d Lon:%d Speed=%d\", count, device.devid, device.name, data.cmd, data.lat, data.lon, data.sog);\n        </logAction>\n    }\n"], ["accessFocusSpace", "\nfunction accessFocusSpace( that, insertFunction, doSave ) {\n\t\t<createRange>\n\t\tvar range = new CKEDITOR.dom.range( that.doc ),\n\t\t</createRange>\n\t\t<defineEditor>\n\t\t\teditor = that.editor,\n\t\t</defineEditor>\n\t\t<createAccessNode>\n\t\t\taccessNode;\n\t\t</createAccessNode>\n\n\t\t<setAccessNodeForIE>\n\t\t\n\t\tif ( env.ie && that.enterMode == CKEDITOR.ENTER_BR )\n\t\t\taccessNode = that.doc.createText( WHITE_SPACE );\n\t\t</setAccessNodeForIE>\n\n\t\t<setAccessNodeForOtherBrowsers>\n\t\t\n\t\telse {\n\t\t\t\n\t\t\t\n\t\t\tvar limit = getClosestEditableLimit( that.element, true ),\n\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tenterMode = limit && limit.data( 'cke-enter-mode' ) || that.enterMode;\n\n\t\t\taccessNode = new newElement( enterElements[ enterMode ], that.doc );\n\n\t\t\tif (!accessNode.is( 'br' )) {\n\t\t\t\tvar dummy = that.doc.createText( WHITE_SPACE );\n\t\t\t\tdummy.appendTo( accessNode );\n\t\t\t}\n\t\t}\n\t\t</setAccessNodeForOtherBrowsers>\n\n\t\t<saveSnapshotOnStart>\n\t\tdoSave && editor.fire( 'saveSnapshot' );\n\t\t</saveSnapshotOnStart>\n\n\t\t<insertAccessNode>\n\t\tinsertFunction( accessNode );\n\t\t</insertAccessNode>\n\t\t<setPositionAndSelect>\n\t\t\n\t\trange.moveToPosition( accessNode, CKEDITOR.POSITION_AFTER_START );\n\t\teditor.getSelection().selectRanges( [ range ] );\n\t\tthat.hotNode = accessNode;\n\t\t</setPositionAndSelect>\n\n\t\t<saveSnapshotOnEnd>\n\t\tdoSave && editor.fire( 'saveSnapshot' );\n\t\t</saveSnapshotOnEnd>\n\t}\n"], "```"]