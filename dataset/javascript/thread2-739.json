[["copyFiles", "\nfunction(paths) {\n    return (\n        gulp\n        .src(paths.src.path)\n        .pipe(gulp.dest(paths.output.baseDir))\n    );\n}\n"], ["constructor", "\nfunction (displayName, continuous, projectionLimits) {\n\n            \n            this.displayName = displayName || \"Geographic Projection\";\n\n            \n            this.continuous = continuous;\n\n            \n            this.projectionLimits = projectionLimits;\n\n            \n            this.is2D = true;\n        }\n"], ["resolveAlias", "\nfunction alias(path, aliases)\n{\n\t\n\tif (!is_package_path(path))\n\t{\n\t\treturn\n\t}\n\n\t\n\tconst slash_index = path.indexOf('/')\n\tconst module_name = slash_index >= 0 ? path.substring(0, slash_index) : path\n\tconst rest = slash_index >= 0 ? path.substring(slash_index) : ''\n\n\t\n\tconst alias = aliases[module_name]\n\n\t\n\tif (alias)\n\t{\n\t\treturn alias + rest\n\t}\n}\n"], ["encodeToMuLaw", "\nfunction encode$1(samples) {\n  \n  let muLawSamples = new Uint8Array(samples.length);\n  for (let i=0; i<samples.length; i++) {\n    muLawSamples[i] = encodeSample$1(samples[i]);\n  }\n  return muLawSamples;\n}\n"], ["findAndPopulateObjects", "\nfunction findObjects(EntityClass, query, params) {\n  <validateArguments>\n  expect(arguments).to.have.length.within(\n    2,\n    3,\n    'Invalid arguments length when inserting an object in a MongoAdapter ' +\n    '(it has to be passed 2 or 3 arguments)'\n  );\n  </validateArguments>\n\n  <findDocuments>\n  function findDocuments(db) {\n    \n    params = params || {};\n    params.sort = params.sort || {id: 1};\n    params.skip = params.skip || 0;\n    params.limit = params.limit || 0;\n\n    if (params.sort.hasOwnProperty('id')) {\n      params.sort._id = params.sort.id;\n      delete params.sort.id;\n    }\n\n    return _buildCursor(db, EntityClass, query, params)\n        .skip(params.skip)\n        .limit(params.limit)\n        .sort(params.sort)\n        .toArray();\n  }\n  </findDocuments>\n\n  <populateEntities>\n  function populateEntities(docs) {\n    var entities = [];\n    for (var i = 0; i < docs.length; i++) {\n      entities.push(documentToObject(docs[i], EntityClass.adapterName));\n    }\n    return entities;\n  }\n  </populateEntities>\n\n  return this.getDatabase()\n    .then(findDocuments)\n    .then(populateEntities);\n}\n"], ["flattenArray", "\nfunction flatten(arr) {\n            var result = [],\n                length = arr.length,\n                i;\n            for (i = 0; i < length; i++) {\n                if (arr[i] instanceof Array) {\n                    result = result.concat(utils.flatten(arr[i]));\n                } else {\n                    result.push(arr[i]);\n                }\n            }\n            return result;\n}\n"], ["enableCDNonContainer", "\nfunction (cb) {\n\t\t\tif (!o1.options.useCDN)\n\t\t\t\treturn cb();\n\n\t\t\to1._log('CDN enabling the container');\n\n\t\t\tcontainer.enableCdn(function (err, _container) {\n\t\t\t\tif (err)\n\t\t\t\t\treturn cb(err);\n\n\t\t\t\t\n\t\t\t\tvar index = _.findIndex(o1.aContainers, { name : sName });\n\n\t\t\t\tcontainer = o1.aContainers[index] = _container;\n\n\t\t\t\tcb();\n\t\t\t});\n}\n"], ["formatBarTitle", "\nfunction barTitleFormatter(action, time) {\n  const parts = ['[COZY-BAR]']\n\n  parts.push(`${String(action.type)}`)\n  if (time) parts.push(`@ ${time}`)\n\n  return parts.join(' ')\n}\n"], ["formatFeature", "\nfunction formatFeature(feature) {\n  <convertMarkdown>\n\treturn Object.assign({}, feature, {\n\t\t\n\t\ttitle: marked.inlineLexer(feature.title, [], {}),\n\t\t\n\t\tdescription: marked.inlineLexer(feature.description, [], {}),\n\t</convertMarkdown>\n\t<processExample>\n\t\texample: postcss().process(feature.example, {\n\t\t\tstringifier: postcssToHTML\n\t\t}).css,\n\t</processExample>\n\t<caniuseIntegration>\n\t\tcaniuse: 'caniuse-compat' in feature\n\t\t\t? { stats: feature['caniuse-compat'] }\n\t\t: feature.caniuse in caniuse.features\n\t\t\t? trimCaniuseFeatures(caniuse.feature(caniuse.features[feature.caniuse]))\n\t\t: false,\n\t\tcaniuseURL: feature.caniuse\n\t});\n  </caniuseIntegration>\n"], ["checkPseudoClass6", "\nfunction checkPseudoClass6(i) {\n  const start = i;\n  let l;\n\n  \n  i++;\n\n  if (i >= tokensLength) return 0;\n\n  \n  if (l = checkIdent(i)) i += l;\n  else return 0;\n\n  return i - start;\n}\n"], "```"]