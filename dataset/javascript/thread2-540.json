[["validateResourcePermission", "\nfunction(resource) {\n      if (resource === \"projectrequests\" || _.includes(resource, \"/\") || _.includes(REVIEW_RESOURCES, resource)) {\n        return false;\n      } else {\n        return true;\n      }\n}\n"], ["loadConfiguration", "\nfunction loadEnvFile() {\n    if (flags.env || flags.envfile) {\n        try {\n            const dotenv = require(\"dotenv\");\n\n            if (flags.envfile)\n                dotenv.config({ path: flags.envfile });\n            else\n                dotenv.config();\n        } catch(err) {\n            throw new Error(\"The 'dotenv' package is missing! Please install it with 'npm install dotenv --save' command.\");\n        }\n    }\n}\n"], ["validateAndUpdateModel", "\nfunction(attrs, setOptions){\n          var model = this;\n          var opt = _.extend({}, options, setOptions);\n          <prepareModelAttributes>\n          var validatedAttrs = getValidatedAttrs(model, getOptionsAttrs(options));\n          var allAttrs = _.extend({}, validatedAttrs, model.attributes, attrs);\n          var flattened = _.extend(flatten(allAttrs), attrs);\n          var changedAttrs = attrs ? flatten(attrs) : flattened;\n          </prepareModelAttributes>\n          <performValidation>\n          var result = validateModel(model, allAttrs, _.pick(flattened, _.keys(validatedAttrs)));\n          model._isValid = result.isValid;\n          </performValidation>\n\n          <triggerValidationEvents>\n          _.defer(function() {\n            model.trigger('validated', model._isValid, model, result.invalidAttrs);\n            model.trigger('validated:' + (model._isValid ? 'valid' : 'invalid'), model, result.invalidAttrs);\n          });\n          </triggerValidationEvents>\n\n          <applyValidationResults>\n          if (!opt.forceUpdate && _.intersection(_.keys(result.invalidAttrs), _.keys(changedAttrs)).length > 0) {\n            return result.invalidAttrs;\n          }\n          </applyValidationResults>\n}\n"], ["initCustomDataTable", "\nfunction(elContainer) {\n    SDT.superclass._initContainerEl.call(this, elContainer);\n    \n    if(this._elContainer) {\n        elContainer = this._elContainer; \n        Dom.addClass(elContainer, DT.CLASS_SCROLLABLE);\n        \n        <createHeaderContainer>\n        var elHdContainer = document.createElement(\"div\");\n        elHdContainer.style.width = this.get(\"width\") || \"\";\n        elHdContainer.style.backgroundColor = this.get(\"COLOR_COLUMNFILLER\");\n        Dom.addClass(elHdContainer, SDT.CLASS_HEADER);\n        this._elHdContainer = elHdContainer;\n        elContainer.appendChild(elHdContainer);\n        </createHeaderContainer>\n    \n        <createBodyContainer>\n        var elBdContainer = document.createElement(\"div\");\n        elBdContainer.style.width = this.get(\"width\") || \"\";\n        elBdContainer.style.height = this.get(\"height\") || \"\";\n        Dom.addClass(elBdContainer, SDT.CLASS_BODY);\n        Ev.addListener(elBdContainer, \"scroll\", this._onScroll, this); \n        this._elBdContainer = elBdContainer;\n        elContainer.appendChild(elBdContainer);\n        </createBodyContainer>\n    }\n}\n"], ["refreshMaterialUniforms", "\nfunction refreshUniformsCommon ( uniforms, material ) {\n        <transferMaterialProperties>\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( _this.gammaInput ) {\n\t\t\tuniforms.diffuse.value.copyGammaToLinear( material.color );\n\t\t} else {\n\t\t\tuniforms.diffuse.value = material.color;\n\t\t}\n        </transferMaterialProperties>\n\n        <setTextureUniforms>\n\t\tuniforms.map.texture = material.map;\n\t\tif ( material.map ) {\n\t\t\tuniforms.offsetRepeat.value.set( material.map.offset.x, material.map.offset.y, material.map.repeat.x, material.map.repeat.y );\n\t\t}\n        </setTextureUniforms>\n\n        <setEnvironmentMapUniforms>\n\t\tuniforms.lightMap.texture = material.lightMap;\n\t\tuniforms.envMap.texture = material.envMap;\n\t\tuniforms.flipEnvMap.value = ( material.envMap instanceof THREE.WebGLRenderTargetCube ) ? 1 : -1;\n\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\t\tuniforms.combine.value = material.combine;\n\t\tuniforms.useRefract.value = material.envMap && material.envMap.mapping instanceof THREE.CubeRefractionMapping;\n        </setEnvironmentMapUniforms>\n}\n"], ["getStyleForURL", "\nfunction styleForURL(url) {\n        <retrieveStyles>\n        var styleSheetId, styles = {};\n        url = _canonicalize(url);\n        for (styleSheetId in _styleSheetDetails) {\n            if (_styleSheetDetails[styleSheetId].canonicalizedURL === url) {\n                styles[styleSheetId] = _styleSheetDetails[styleSheetId];\n            }\n        }\n        </retrieveStyles>\n        return styles;\n}\n"], ["updateResultWithFrameContext", "\nfunction pushFrame(resultSet, options, frameElement, frameSelector) {\n\t'use strict';\n\t<frameIdentification>\n\tvar frameXpath = axe.utils.getXpath(frameElement);\n\tvar frameSpec = {\n\t\telement: frameElement,\n\t\tselector: frameSelector,\n\t\txpath: frameXpath\n\t};\n\t</frameIdentification>\n\n\t<embedResultsInFrameContext>\n\tresultSet.forEach(function(res) {\n\t\tres.node = axe.utils.DqElement.fromFrame(res.node, options, frameSpec);\n\n\t\tvar checks = axe.utils.getAllChecks(res);\n\t\tif (checks.length) {\n\t\t\tchecks.forEach(function(check) {\n\t\t\t\tcheck.relatedNodes = check.relatedNodes.map(node =>\n\t\t\t\t\taxe.utils.DqElement.fromFrame(node, options, frameSpec)\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t});\n\t</embedResultsInFrameContext>\n}\n"], ["matchXMLToXSLTExpression", "\nfunction xsltMatch(match, context) {\n  var expr = xpathParse(match);\n\n  <evaluateSingleNodeMatch>\n  var ret;\n  if (expr.steps && !expr.absolute && expr.steps.length == 1 &&\n      expr.steps[0].axis == 'child' && expr.steps[0].predicate.length == 0) {\n    ret = expr.steps[0].nodetest.evaluate(context).booleanValue();\n  } else {\n  </evaluateSingleNodeMatch>\n\n  <evaluateMultipleNodeMatch>\n    ret = false;\n    var node = context.node;\n    while (!ret && node) {\n      var result = expr.evaluate(context.clone(node,0,[node])).nodeSetValue();\n      for (var i = 0; i < result.length; ++i) {\n        if (result[i] == context.node) {\n          ret = true;\n          break;\n        }\n      }\n      node = node.parentNode;\n    }\n  </evaluateMultipleNodeMatch>\n  return ret;\n}\n"], ["initializeTattletale", "\nfunction Tattletale(socket, opts) {\n  stream.Transform.call(this, {  });\n\n  <mergeOptions>\n  this.options = merge(Object.create(Tattletale.DEFAULTS), opts || {});\n  </mergeOptions>\n  this.socket = socket;\n\n  <definePeersFunction>\n  this.peers = function() {\n    return [];\n  };\n  </definePeersFunction>\n}\n"], ["lazyLoadUnifiedLibrary", "\nfunction resolveDependenciesToUnified() {\n        if ( !Calendar || !DateRange ) {\n            sap.ui.getCore().loadLibrary(\"sap.ui.unified\");\n            <loadCalendarSynchronously>\n            Calendar = sap.ui.requireSync(\"sap/ui/unified/Calendar\");\n            </loadCalendarSynchronously>\n            <loadDateRangeSynchronously>\n            DateRange = sap.ui.requireSync(\"sap/ui/unified/DateRange\");\n            </loadDateRangeSynchronously>\n        }\n}\n"], "```"]