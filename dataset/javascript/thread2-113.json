[["removeKeybindings", "\nfunction removeKeybindings(bindings, method) {\n  if (!bindings) return;\n  <inputValidation>\n  if (typeof bindings === 'string' && !method) \n    console.warn('removeKeybindings requires method as second arg');\n  </inputValidation>\n  \n  <removeMethodInvocation>\n  if (typeof bindings === 'string') return removeMethod(bindings, method);\n  Object.keys(bindings).forEach((key) => removeMethod(key, bindings[key]));\n  </removeMethodInvocation>\n}\n"], ["RPCBase", "\nfunction RPCBase() {\n  \n  <ctorCheck>\n  if (!(this instanceof RPCBase))\n    return new RPCBase();\n  </ctorCheck>\n\n  <eventEmitterCall>\n  EventEmitter.call(this);\n  </eventEmitterCall>\n\n  <initializeProperties>\n  this.logger = Logger.global;\n  this.calls = Object.create(null);\n  this.mounts = [];\n  this.locker = new Lock();\n  </initializeProperties>\n}\n"], ["lookup", "\nfunction lookup(pageRef) {\n  \n  <clonePage>\n  const page = deepClone(artifactsByRef.pages[pageRef]);\n  </clonePage>\n  \n  <removeDisabledItemsFromPage>\n  removeDisabledItems(page);\n  </removeDisabledItemsFromPage>\n  \n  return page;\n}\n"], ["anonymousSetElementValue", "\nfunction() {\n  var self = this,\n  \n  <mapItemValues>\n  val = $.map(self.items(), function(item) {\n    return self.options.itemValue(item).toString();\n  });\n  </mapItemValues>\n\n  <setElementValue>\n  self.$element.val(val, true);\n  </setElementValue>\n\n  <triggerElementChange>\n  if (self.options.triggerChange)\n    self.$element.trigger('change');\n  </triggerElementChange>\n}\n"], ["typescriptSource", "\nfunction typescriptSource() {\n  <sourceFileCollection>\n  return gulp.src([\n    \n    \"./src/helper/*.ts\",\n    \"./src/BasicCollection.ts\",\n    \"./src/OrderedCollection.ts\",\n    \"./src/CollectionStatic.ts\",\n    \"./src/internal/Collection.ts\",\n    \"./src/internal/MinHeap.ts\",\n    \"./src/internal/OrderedCollection.ts\",\n    \"./src/module.ts\"\n  ])\n  </sourceFileCollection>\n\n  <removeImports>\n  .pipe(replace(/import\\s[^;]+;/ig, \"\"))\n  </removeImports>\n\n  <removeExportPrefix>\n  .pipe(replace(/export\\s(\\w+\\s__)/ig, \"$1\"))\n  </removeExportPrefix>\n  \n  <concatenateAndSave>\n  .pipe(concat(\"linq.ts\"))\n  .pipe(gulp.dest(\"./build\"));\n  </concatenateAndSave>\n}\n"], ["isCrossOrigin", "\nfunction isCrossOrigin(pageLocation, ajaxHost) {\n\n  <defineDefaultPort>\n  function defaultPort(protocol) {\n    return {'http:':80, 'https:':443}[protocol];\n  }\n  </defineDefaultPort>\n  \n  <definePortOfLocation>\n  function portOf(location) {\n    return location.port || defaultPort(location.protocol||pageLocation.protocol);\n  }\n  </definePortOfLocation>\n\n  <determineCrossOriginStatus>\n  return !!(  (ajaxHost.protocol  && (ajaxHost.protocol  != pageLocation.protocol)) ||\n              (ajaxHost.host      && (ajaxHost.host      != pageLocation.host))     ||\n              (ajaxHost.host      && (portOf(ajaxHost) != portOf(pageLocation)))\n         );\n  </determineCrossOriginStatus>\n}\n"], ["Sender", "\nfunction Sender(prefix) {\n  \n  <validatePrefix>\n  if (!prefix) {\n    throw new Error(enplug.classes.Transport.prototype.TAG + 'Senders must specify a method prefix.');\n  }\n  </validatePrefix>\n\n  <initializeProperties>\n  this.prefix = prefix;\n  this.novalidate = false;\n  this.transport = new enplug.classes.Transport(window, prefix);\n  </initializeProperties>\n}\n"], ["calculateIndices", "\nfunction() {\n  this.indices = {};\n\n  <populateIndices>\n  for (var i = 0, l = this.keys.length; i < l; i++) {\n    this.indices[this.keys[i]] = i;\n  }\n  </populateIndices>\n\n  return this;\n}\n"], ["registerEffect", "\nfunction registerEffect(suffix, animation) {\n  \n  <handleSuffixAsObject>\n  if (_.isObject(suffix)) {\n    animation = suffix;\n    suffix = '';\n  }\n  </handleSuffixAsObject>\n\n  <effectKeyCreation>\n  var key = 'VelocityHelper.animation.' + effectCounter++ + suffix;\n  </effectKeyCreation>\n\n  <serverShimCheck>\n  if (Velocity.velocityReactServerShim) {\n    return key;\n  }\n  </serverShimCheck>\n\n  <registerEffectValidation>\n  if (Velocity.RegisterEffect === undefined) {\n    throw \"Velocity.RegisterEffect not found. You need to require 'velocity-animate/velocity.ui' at a top level for UI Pack.\";\n  }\n  </registerEffectValidation>\n\n  <registerEffectImplementation>\n  Velocity.RegisterEffect(key, animation);\n  </registerEffectImplementation>\n\n  return key;\n}\n"], ["computeLongitudeDelta", "\nfunction(distance, latitude) {\n  \n  <convertToRadians>\n  var radians = degreesToRadians(latitude);\n  </convertToRadians>\n\n  <calculateDelta>\n  var num = Math.cos(radians) * g_EARTH_EQ_RADIUS * Math.PI / 180;\n  var denom = 1 / Math.sqrt(1 - g_E2 * Math.sin(radians) * Math.sin(radians));\n  var deltaDeg = num * denom;\n  </calculateDelta>\n\n  <handleSmallDelta>\n  if (deltaDeg < g_EPSILON) {\n    return distance > 0 ? 360 : 0;\n  }\n  </handleSmallDelta>\n  \n  <computeDegreeDistance>\n  else {\n    return Math.min(360, distance / deltaDeg);\n  }\n  </computeDegreeDistance>\n}\n"], ""]