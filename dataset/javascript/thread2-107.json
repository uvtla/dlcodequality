[["webpackModuleExports", "\nfunction(module, exports, __webpack_require__) {\n\t\n\t\"use strict\";\n\t<exportSubject>\n\tvar Subject_1 = __webpack_require__(4);\n\texports.Subject = Subject_1.Subject;\n\t</exportSubject>\n\t\n\t<exportObservable>\n\tvar Observable_1 = __webpack_require__(5);\n\texports.Observable = Observable_1.Observable;\n\t</exportObservable>\n\t\n\t<requireModules>\n\t__webpack_require__(295);\n\t// (remaining __webpack_require__ calls are omitted for brevity)\n\t__webpack_require__(605);\n\t</requireModules>\n\t\n\t<exportSubscription>\n\tvar Subscription_1 = __webpack_require__(10);\n\texports.Subscription = Subscription_1.Subscription;\n\t</exportSubscription>\n\t\n\t<exportSubscriber>\n\tvar Subscriber_1 = __webpack_require__(8);\n\texports.Subscriber = Subscriber_1.Subscriber;\n\t</exportSubscriber>\n\t\n\t<exportAsyncSubject>\n\tvar AsyncSubject_1 = __webpack_require__(298);\n\texports.AsyncSubject = AsyncSubject_1.AsyncSubject;\n\t</exportAsyncSubject>\n\t\n\t<exportReplaySubject>\n\tvar ReplaySubject_1 = __webpack_require__(393);\n\texports.ReplaySubject = ReplaySubject_1.ReplaySubject;\n\t</exportReplaySubject>\n\t\n\t// (additional export blocks are omitted for brevity)\n\t\n\t<exportScheduler>\n\tvar Scheduler = {\n\t    asap: asap_1.asap,\n\t    queue: queue_1.queue,\n\t    animationFrame: animationFrame_1.animationFrame,\n\t    async: async_1.async\n\t};\n\texports.Scheduler = Scheduler;\n\t</exportScheduler>\n\t\n\t<exportSymbol>\n\tvar Symbol = {\n\t    rxSubscriber: rxSubscriber_1.$$rxSubscriber,\n\t    observable: observable_1.$$observable,\n\t    iterator: iterator_1.$$iterator\n\t};\n\texports.Symbol = Symbol;\n\t</exportSymbol>\n}\n"], ["base64ArrayBuffer", "\nfunction base64ArrayBuffer(bytes) {\n    <base64Encoding>\n    var base64    = ''\n    var encodings = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n    var byteLength    = bytes.byteLength\n    var byteRemainder = byteLength % 3\n    var mainLength    = byteLength - byteRemainder\n    var a, b, c, d\n    var chunk\n   \n    for (var i = 0; i < mainLength; i = i + 3) {\n      chunk = (bytes[i] << 16) | (bytes[i + 1] << 8) | bytes[i + 2]\n      a = (chunk & 16515072) >> 18 \n      b = (chunk & 258048)   >> 12 \n      c = (chunk & 4032)     >>  6 \n      d = chunk & 63               \n      base64 += encodings[a] + encodings[b] + encodings[c] + encodings[d]\n    }\n    </base64Encoding>\n    \n    <handleRemainder>\n    if (byteRemainder == 1) {\n      chunk = bytes[mainLength]\n      a = (chunk & 252) >> 2 \n      b = (chunk & 3)   << 4 \n      base64 += encodings[a] + encodings[b] + '=='\n    } else if (byteRemainder == 2) {\n      chunk = (bytes[mainLength] << 8) | bytes[mainLength + 1]\n      a = (chunk & 64512) >> 10 \n      b = (chunk & 1008)  >>  4 \n      c = (chunk & 15)    <<  2 \n      base64 += encodings[a] + encodings[b] + encodings[c] + '='\n    }\n    </handleRemainder>\n    \n    return base64\n}\n"], ["pluginManager", "\nfunction(data) {\n    <pluginActivation>\n    if (data.active) {\n        bs.pluginManager.enablePlugin(data.name);\n    } else {\n        bs.pluginManager.disablePlugin(data.name);\n    }\n    </pluginActivation>\n    <setUserPlugins>\n    bs.setOption(\"userPlugins\", bs.getUserPlugins());\n    </setUserPlugins>\n}\n"], ["generatePathString", "\nfunction generatePathString(paths) {\n  let pathString = '';\n\n  <checkPaths>\n  if (!paths || !paths.length) return pathString;\n  </checkPaths>\n\n  <formatPaths>\n  if (paths.length > 1) {\n    pathString = paths.map(pathItem => filepathName(pathItem));\n    \n    if (pathString.length > maxInputStringLength) {\n      const remainder = pathString.length - maxInputStringLength;\n      pathString = `${pathString\n        .slice(0, maxInputStringLength)\n        .join(', ')} ...and ${remainder} other${remainder > 1 ? 's' : ''}`;\n    } else {\n      pathString = pathString.join(', ');\n    }\n  } else {\n    pathString = filepathName(paths[0]);\n  }\n  </formatPaths>\n\n  return pathString;\n}\n"], ["LGAudioVisualization", "\nfunction LGAudioVisualization() {\n    <initializeProperties>\n    this.properties = {\n        continuous: true,\n        mark: -1\n    };\n    </initializeProperties>\n\n    <inputSetup>\n    this.addInput(\"data\", \"array\");\n    this.addInput(\"mark\", \"number\");\n    </inputSetup>\n\n    <setSize>\n    this.size = [300, 200];\n    </setSize>\n\n    <initializeBuffer>\n    this._last_buffer = null;\n    </initializeBuffer>\n}\n"], ["_Browser_getElement", "\nfunction _Browser_getElement(id) {\n    <getElementInfo>\n\treturn _Browser_withNode(id, function(node) {\n\t\tvar rect = node.getBoundingClientRect();\n\t\tvar x = _Browser_window.pageXOffset;\n\t\tvar y = _Browser_window.pageYOffset;\n\t\treturn {\n\t\t\t__$scene: _Browser_getScene(),\n\t\t\t__$viewport: {\n\t\t\t\t__$x: x,\n\t\t\t\t__$y: y,\n\t\t\t\t__$width: _Browser_doc.documentElement.clientWidth,\n\t\t\t\t__$height: _Browser_doc.documentElement.clientHeight\n\t\t\t},\n\t\t\t__$element: {\n\t\t\t\t__$x: x + rect.left,\n\t\t\t\t__$y: y + rect.top,\n\t\t\t\t__$width: rect.width,\n\t\t\t\t__$height: rect.height\n\t\t\t}\n\t\t};\n\t});\n    </getElementInfo>\n}\n"], ["popupComputedStyle", "\nfunction () {\n    <defineVariables>\n    var size, zIndex;\n    </defineVariables>\n\n    <computeZIndex>\n    if (this.isOpen && this.computedStyle.zIndex) {\n        zIndex = this.computedStyle.zIndex;\n    } else {\n        zIndex = ariaPopupsPopupManager.getZIndexForPopup(this);\n    }\n    </computeZIndex>\n\n    <computeSize>\n    if (this.conf.preferredWidth > 0) {\n        size = { width : this.conf.preferredWidth, height : 0 };\n    } else {\n        \n        size = this._getFreeSize();\n    }\n    </computeSize>\n\n    <computePosition>\n    \n    var position = this._getPosition(size);\n    </computePosition>\n\n    <setComputedStyle>\n    var computedStyle = {\n        'top' : position.top,\n        'bottom' : position.bottom,\n        'right' : position.right,\n        'left' : position.left,\n        'height' : size.height,\n        'width' : size.width,\n        'zIndex' : zIndex\n    };\n    </setComputedStyle>\n\n    return computedStyle;\n}\n"], ["iterateChildren", "\nfunction (callback, context) {\n    <iterate>\n    var _children = this._children;\n    for(var i = 0, len = _children.length; i < len; i++) {\n        var child = _children[i];\n        callback.call(context, child, i);\n    }\n    </iterate>\n}\n"], ["createAttributeWrapper", "\nfunction createAttributeWrapper(gl, program, attributes, doLink) {\n  <initializeWrapper>\n  var obj = {}\n  </initializeWrapper>\n  \n  <setupAttributes>\n  for(var i=0, n=attributes.length; i<n; ++i) {\n    var a = attributes[i]\n    var name = a.name\n    var type = a.type\n    var location = gl.getAttribLocation(program, name)\n    \n    <handleAttributeTypes>\n    switch(type) {\n      case 'bool':\n      case 'int':\n      case 'float':\n        addVectorAttribute(gl, program, location, 1, obj, name, doLink)\n      break\n      \n      default:\n        if(type.indexOf('vec') >= 0) {\n          var d = type.charCodeAt(type.length-1) - 48\n          if(d < 2 || d > 4) {\n            throw new Error('gl-shader: Invalid data type for attribute ' + name + ': ' + type)\n          }\n          addVectorAttribute(gl, program, location, d, obj, name, doLink)\n        } else {\n          throw new Error('gl-shader: Unknown data type for attribute ' + name + ': ' + type)\n        }\n      break\n    }\n    </handleAttributeTypes>\n  }\n  </setupAttributes>\n\n  <returnAttributeObject>\n  return obj\n  </returnAttributeObject>\n}\n"], ["hasAllProperties", "\nfunction hasAllProperties(fieldList, o) {\n    <checkObjectFields>\n    return (o instanceof Object) && all(function (field) { return (field in o); }, fieldList);\n    </checkObjectFields>\n}\n"], "```"]