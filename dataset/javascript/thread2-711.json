[["parseCodeChunkToAST", "\nfunction parseCodeChunkToAST(src, options) {\n    src = src\n    .replace(/@/g, '\\uFFDA')\n    .replace(/#/g, '\\uFFDB')\n    ;\n    var ast = recast.parse(src);\n    return ast;\n}\n"], ["webpack_require_extension", "\nfunction(module, exports, __webpack_require__) {\n\t\"use strict\";\n\tvar Observable_1 = __webpack_require__(5);\n\tvar count_1 = __webpack_require__(425);\n\tObservable_1.Observable.prototype.count = count_1.count;\n}\n"], ["mainViewStateSet", "\nfunction mainViewStateSet(mode, recursive) {\n    mainView.state.mode = mode;\n    mainView.state.recursive = recursive;\n}\n"], ["addValidChildren", "\nfunction addValidChildren(validChildren) {\n    var childRuleRegExp = /^([+\\-]?)(\\w+)\\[([^\\]]+)\\]$/;\n    \n    mapCache[settings.schema] = null;\n    validChildren && each(split(validChildren, ','), function(rule) {\n        var parent, prefix, matches = childRuleRegExp.exec(rule);\n        if (matches) {\n            prefix = matches[1];\n            \n            parent = prefix ? children[matches[2]] : children[matches[2]] = {\n                '#comment': {}\n            };\n            parent = children[matches[2]];\n            each(split(matches[3], '|'), function(child) {\n                '-' === prefix ? delete parent[child] : parent[child] = {};\n            });\n        }\n    });\n}\n"], ["fixUpMediaElement", "\nfunction fixUpMediaElement (mediaEl) {\n  \n  var newMediaEl = setCrossOrigin(mediaEl);\n\n  \n  if (newMediaEl.tagName && newMediaEl.tagName.toLowerCase() === 'video') {\n    newMediaEl.setAttribute('playsinline', '');\n    newMediaEl.setAttribute('webkit-playsinline', '');\n  }\n\n  if (newMediaEl !== mediaEl) {\n    mediaEl.parentNode.appendChild(newMediaEl);\n    mediaEl.parentNode.removeChild(mediaEl);\n  }\n  return newMediaEl;\n}\n"], ["routerMiddlewareExecutor", "\nfunction (routerMiddelware, req, res, next) {\n\tvar middlewareFilename = routerMiddelware.split('.')[0];\n\tvar middlewareFunction = routerMiddelware.split('.')[1];\n\n\tif (!req.pipa) req.pipa = {};\n\n\tthis.middlewares[middlewareFilename][middlewareFunction](req, res, function (data) {\n\t\t_.extend(req.pipa, data); next();\n\t});\n}\n"], ["Text_constructor", "\nfunction Text(text, style, resolution)\n{\n    this.canvas = document.createElement('canvas');\n    this.context = this.canvas.getContext('2d');\n    this.resolution = resolution || CONST.RESOLUTION;\n    this._text = null;\n    this._style = null;\n\n    var texture = Texture.fromCanvas(this.canvas);\n    texture.trim = new math.Rectangle();\n    \n    <Sprite_call>\n    Sprite.call(this, texture);\n    </Sprite_call>\n    \n    this.text = text;\n    this.style = style;\n}\n"], ["handleUploadEvent", "\nfunction(_event){\n    var _element = _v._$getElement(_event),\n        _id = _element.id,\n        _arr = _id.split('-'),\n        _cch = _cache[_arr[0]];\n    if (!_element.value) return;\n    if (_cch.multiple){\n        <labelUpdate>\n        _e._$get(_cch.lab).htmlFor =\n            _doAppendFile(_arr[0],_cch);\n        </labelUpdate>\n    }\n    if (!_element.name){\n        <nameAssignment>\n        var _sufix = '';\n        _element.name = _cch.name+_sufix;\n        </nameAssignment>\n    }\n    <onchangeTrigger>\n    _cch.onchange({\n        id:_id,\n        form:_element.form,\n        target:_e._$get(_cch.lab)\n    });\n    </onchangeTrigger>\n}\n"], ["_shouldCopyAssets", "\nfunction _shouldCopyAssets(assetsDir) {\n  if (!fs.existsSync(assetsDir)) {\n    return true;\n  }\n\n  try {\n    const appCss = loadFile(path.join(assetsDir, 'app.css'));\n    const appCssVersion = /\\d+\\.\\d+\\.\\d+/.exec(appCss);\n    if (!appCssVersion || appCssVersion[0] !== pkg.version) {\n      return true;\n    }\n  } catch (e) {\n    return true;\n  }\n\n  return false;\n}\n"], ["extend", "\nfunction extend(obj) {\n  var slice = Array.prototype.slice;\n\n  slice.call(arguments, 1).forEach(function(source) {\n    var getter\n      , setter;\n\n    for (var key in source) {\n      getter = source.__lookupGetter__(key);\n      setter = source.__lookupSetter__(key);\n\n      if (getter || setter) {\n        getter && obj.__defineGetter__(key, getter);\n        setter && obj.__defineSetter__(key, setter);\n      }\n\n      else {\n        obj[key] = source[key];\n      }\n    }\n  });\n\n  return obj;\n}\n"], ""]