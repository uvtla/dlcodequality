[["checkAvailability", "\nfunction checkAvailability( obj ) {\n    for ( var k = 1, len = arguments.length; k < len; k++) {\n        for ( var m in arguments[k]) {\n            if (obj.hasOwnProperty(m)) {\n                throw obj.getClass() + \": has \" + m + \" at more than one places\";\n            }\n        }\n    }\n}\n"], ["scoreCandidate", "\nfunction scoreCandidate (node, contentScore, candidates) {\n  let score\n  if (typeof node.data('readabilityScore') === 'undefined') {\n    <initializeNodeAndPushCandidate>\n    score = initializeNode(node)\n    candidates.push(node)\n    </initializeNodeAndPushCandidate>\n  } else {\n    score = node.data('readabilityScore') || 0\n  }\n  node.data('readabilityScore', score + contentScore)\n}\n"], ["arcToBeziere", "\nfunction arcToBeziere(pos, val) {\n    \n    <arcToBezierCalculation>\n    \n    //... (the entire content of this function represents a complex SVG path calculation responsibility)\n    \n    </arcToBezierCalculation>\n    \n    return retVal\n}\n"], ["GhostRouter", "\nfunction GhostRouter(options) {\n    <createRouter>\n    const router = express.Router(options);\n\n    function innerRouter(req, res, next) {\n        return innerRouter.handle(req, res, next);\n    }\n    </createRouter>\n\n    <extendPrototype>\n    Object.setPrototypeOf(innerRouter, router);\n    </extendPrototype>\n\n    <defineProperty>\n    Object.defineProperty(innerRouter, 'name', {\n        value: options.parent.name,\n        writable: false\n    });\n    </defineProperty>\n\n    <assignParent>\n    innerRouter.parent = options.parent;\n    </assignParent>\n    return innerRouter;\n}\n"], ["processFile", "\nfunction processFile(sourcePath, templates, customPartialName, files) {\n  return (file, callback) => {\n    <prepareRenderingContext>\n    const layout = templates.layouts[file.meta.layout];\n    const fns = wrapFunctions(templates.fns, file, files);\n    const context = Object.assign({}, file.meta, fns);\n    </prepareRenderingContext>\n    <renderFile>\n    async.waterfall([\n      cb => getPartials(file, sourcePath, templates, customPartialName, cb),\n      (partials, cb) => render(file, layout, context, partials, cb),\n    ], (error, result) => {\n      const data = result;\n      async.nextTick(callback, error, Object.assign({}, file, { data }));\n    });\n    </renderFile>\n  };\n}\n"], ["readNumber", "\nfunction readNumber(walker) {\n    <matchNumberOrUnaryExpression>\n    //... (the entire content of this function represents the task of parsing a number or unary expression from a string)\n    </matchNumberOrUnaryExpression>\n}\n"], ["expose", "\nfunction expose(subject, name) {\n    <conditionalExposure>\n    if (subject.isRendered()) {\n        exposer(subject, name);\n    } else {\n        subject.on(\"attach\", function () {\n            exposer(subject, name);\n        })\n    }\n    </conditionalExposure>\n}\n"], ["webpackModuleExport", "\nfunction (module, exports, __webpack_require__) {\n\n    <exportErrorCheckFunction>\n                \n    var $export = __webpack_require__(6)\n        , cof = __webpack_require__(32);\n\n    $export($export.S, 'Error', {\n        isError: function isError(it) {\n            return cof(it) === 'Error';\n        }\n    });\n\n    </exportErrorCheckFunction>\n                \n}\n"], ["rgbToRgb", "\nfunction rgbToRgb(r, g, b){\n    <convertRgbValues>\n    return {\n        r: bound01(r, 255) * 255,\n        g: bound01(g, 255) * 255,\n        b: bound01(b, 255) * 255\n    };\n    </convertRgbValues>\n}\n"], ["pc_dump", "\nfunction pc_dump() {\n\n<programmeCacheReporting>\n//... (the entire content of this function represents a singular responsibility of reporting and logging the programme cache details)\n</programmeCacheReporting>\n\n}\n"], ""]