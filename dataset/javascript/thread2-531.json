[["functionNameless1", "\nfunction( condition ) {\n    <determineCheckFn>\n    var checkFn =\n        typeof condition == 'function' ?\n            condition :\n        typeof condition == 'string' ?\n            function( el ) {\n                return el.name == condition;\n            } :\n            function( el ) {\n                return el.name in condition;\n            };\n    </determineCheckFn>\n\n    var parent = this.parent;\n\n    <traverseParent>\n    while ( parent && parent.type == CKEDITOR.NODE_ELEMENT ) {\n        if ( checkFn( parent ) )\n            return parent;\n        parent = parent.parent;\n    }\n    </traverseParent>\n\n    return null;\n}\n"], ["setFirewall", "\nfunction(firewall) {\n    var t = Monitor.getRouter(); \n    t.firewall = firewall;\n    log.info('setFirewall', firewall);\n}\n"], ["timeParamToSeconds", "\nfunction timeParamToSeconds(param) {\n    var componentValue = function (si) {\n        var regex = new RegExp('(\\\\d+)' + si);\n        return param.match(regex) ? parseInt(RegExp.$1, 10) : 0;\n    };\n\n    return componentValue('h') * 3600\n        + componentValue('m') * 60\n        + componentValue('s');\n}\n"], ["Max7219", "\nfunction Max7219(board, din, cs, clk) {\n    <constructorSetup>\n    Module.call(this);\n    this._board = board;\n    this._din = din;\n    this._cs = cs;\n    this._clk = clk;\n    this._intensity = 0;\n    this._data = 'ffffffffffffffff';\n    </constructorSetup>\n\n    <boardEventListeners>\n    this._board.on(BoardEvent.BEFOREDISCONNECT, this.animateStop.bind(this));\n    this._board.on(BoardEvent.ERROR, this.animateStop.bind(this));\n    </boardEventListeners>\n\n    <sendInitialData>\n    this._board.send([0xf0, 4, 8, 0, din.number, cs.number, clk.number, 0xf7]);\n    </sendInitialData>\n}\n"], ["decrypt", "\nfunction decrypt(buffer, params, keyLookupCallback) {\n    <parseHeader>\n    var header = parseParams(params);\n    if (header.version === 'aes128gcm') {\n        var headerLength = readHeader(buffer, header);\n        buffer = buffer.slice(headerLength);\n    }\n    </parseHeader>\n    \n    var key = deriveKeyAndNonce(header, MODE_DECRYPT, keyLookupCallback);\n    var start = 0;\n    var result = new Buffer(0);\n\n    <calculateChunkSize>\n    var chunkSize = header.rs;\n    if (header.version !== 'aes128gcm') {\n        chunkSize += TAG_LENGTH;\n    }\n    </calculateChunkSize>\n\n    <decryptChunks>\n    for (var i = 0; start < buffer.length; ++i) {\n        var end = start + chunkSize;\n        if (header.version !== 'aes128gcm' && end === buffer.length) {\n            throw new Error('Truncated payload');\n        }\n        end = Math.min(end, buffer.length);\n        if (end - start <= TAG_LENGTH) {\n            throw new Error('Invalid block: too small at ' + i);\n        }\n        var block = decryptRecord(key, i, buffer.slice(start, end),\n                                  header, end >= buffer.length);\n        result = Buffer.concat([result, block]);\n        start = end;\n    }\n    </decryptChunks>\n\n    return result;\n}\n"], ["setCookie", "\nfunction setCookie(optOutState) {\n    <handleOptOutState>\n    switch (optOutState) {\n        case true:\n            document.cookie = `${disableStr}=true; expires=Thu, 18 Jan 2038 03:13:59 UTC; path=/`;\n            window[disableStr] = true;\n            break;\n\n        case false:\n            document.cookie = `${disableStr}=false; expires=Thu, 01 Jan 1970 00:00:01 UTC; path=/`;\n            window[disableStr] = false;\n            break;\n\n        default:\n            console.warn('setCookie for outOut invalid param optOutState. Param must be boolean');\n            return false;\n    }\n    </handleOptOutState>\n\n    return true;\n}\n"], ["createOptions", "\nfunction createOptions(options) {\n    <cacheOptions>\n    var object = optionsCache[options] = {}; (options.match(rnotwhite) || []).forEach(function (flag) {\n        object[flag] = true;\n    });\n    </cacheOptions>\n    return object;\n}\n"], ["run", "\nfunction run(g) {\n    <initializeDummyChains>\n    g.graph().dummyChains = [];\n    </initializeDummyChains>\n    <normalizeGraphEdges>\n    _.forEach(g.edges(), function(edge) { normalizeEdge(g, edge); });\n    </normalizeGraphEdges>\n}\n"], ["functionNameless2", "\nfunction (type, data) {\n    if (type === 'size') {\n        return `File size should be less than ${bytes(data.size)}`\n    }\n\n    if (type === 'type') {\n        const verb = data.types.length === 1 ? 'is' : 'are'\n        return `Invalid file type ${data.subtype} or ${data.type}. Only ${data.types.join(', ')} ${verb} allowed`\n    }\n\n    if (type === 'extname') {\n        const verb = data.extnames.length === 1 ? 'is' : 'are'\n        return `Invalid file extension ${data.extname}. Only ${data.extnames.join(', ')} ${verb} allowed`\n    }\n}\n"], ["f_cop_urun_sil", "\nfunction f_cop_urun_sil(_tahta_id, _urun_id, _kullanici_id) {\n    <verifyProductDeletion>\n    var urun = require('./db_urun');\n    return urun.f_db_urun_teklif_kontrol(_tahta_id, _urun_id)\n        .then(function (_teklifler) {\n            if (_teklifler && _teklifler != null && _teklifler.length > 0) {\n\n                throw new exception.Istisna(\"\u00dcr\u00fcn silinemedi!\",\n                    \"Silinmek istenen \u00fcr\u00fcne ait sistemde kay\u0131tl\u0131 teklifler oldu\u011fu i\u00e7in i\u015flem ger\u00e7ekle\u015ftirilemez!\");\n\n            } else {\n                return urun.f_db_urun_sil(_tahta_id, _urun_id, _kullanici_id);\n            }\n        });\n    </verifyProductDeletion>\n}\n"], "```"]