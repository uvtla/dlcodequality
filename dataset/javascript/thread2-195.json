[["assertHtmlEquality", "\nfunction(actual, expected, message) {\n  message = message || \"HTML should be equal\";\n  this.deepEqual(serializeHtml(actual), serializeHtml(expected), message);\n}\n"], ["prototypeCreationAndAssertion", "\nfunction() {\n\n  var Foo = $prototype({ $static: { noop: _.noop } }),\n    Bar = $extends(Foo);\n\n  var foo = new Foo(),\n    bar = new Bar();\n\n\n  $assert(foo.constructor === Foo)\n  $assert(bar.constructor === Bar)\n\n\n  $assert(_.isTypeOf(Function, foo.constructor.noop))\n  $assert(_.isTypeOf(Meta, foo.constructor.$definition.noop))\n\n\n  $assert(Foo.isTypeOf(foo))\n  $assert(!Bar.isTypeOf(foo))\n  $assert(Bar.isTypeOf(bar))\n  $assert(Foo.isTypeOf(bar))\n\n\n  $assert(foo.isInstanceOf(Foo))\n  $assert(!foo.isInstanceOf(Bar))\n  $assert(bar.isInstanceOf(Bar))\n  $assert(bar.isInstanceOf(Foo))\n}\n"], ["configureChart", "\nfunction($super, key, value, properties) {\n  $super(key, value, properties);\n\n  switch (key) {\n\n    case 'chart.showMarkers':\n      this.showMarkers = (value === 'true');\n      this.mapper.mapValue((value === 'true' ? this.markerRadius : 0), [\"plotOptions\", \"line\", \"marker\", \"radius\"]);\n      break;\n    default:\n\n      break;\n\n  }\n}\n"], ["GB18030Decoder", "\nfunction GB18030Decoder(options) {\n  var fatal = options.fatal;\n\n  var gb18030_first = 0x00,\n    gb18030_second = 0x00,\n    gb18030_third = 0x00;\n\n  this.handler = function(stream, bite) {\n\n    if (bite === end_of_stream && gb18030_first === 0x00 &&\n      gb18030_second === 0x00 && gb18030_third === 0x00) {\n      return finished;\n    }\n\n    if (bite === end_of_stream &&\n      (gb18030_first !== 0x00 || gb18030_second !== 0x00 ||\n        gb18030_third !== 0x00)) {\n      gb18030_first = 0x00;\n      gb18030_second = 0x00;\n      gb18030_third = 0x00;\n      decoderError(fatal);\n    }\n\n    var code_point;\n\n    if (gb18030_third !== 0x00) {\n      \n      code_point = null;\n\n      if (inRange(bite, 0x30, 0x39)) {\n        code_point = indexGB18030RangesCodePointFor(\n          (((gb18030_first - 0x81) * 10 + (gb18030_second - 0x30)) * 126 +\n            (gb18030_third - 0x81)) * 10 + bite - 0x30);\n      }\n\n      var buffer = [gb18030_second, gb18030_third, bite];\n\n      gb18030_first = 0x00;\n      gb18030_second = 0x00;\n      gb18030_third = 0x00;\n\n      if (code_point === null) {\n        stream.prepend(buffer);\n        return decoderError(fatal);\n      }\n\n      return code_point;\n    }\n\n    if (gb18030_second !== 0x00) {\n\n      if (inRange(bite, 0x81, 0xFE)) {\n        gb18030_third = bite;\n        return null;\n      }\n\n      stream.prepend([gb18030_second, bite]);\n      gb18030_first = 0x00;\n      gb18030_second = 0x00;\n      return decoderError(fatal);\n    }\n\n    if (gb18030_first !== 0x00) {\n\n      if (inRange(bite, 0x30, 0x39)) {\n        gb18030_second = bite;\n        return null;\n      }\n\n      var lead = gb18030_first;\n      var pointer = null;\n      gb18030_first = 0x00;\n\n      var offset = bite < 0x7F ? 0x40 : 0x41;\n\n      if (inRange(bite, 0x40, 0x7E) || inRange(bite, 0x80, 0xFE))\n        pointer = (lead - 0x81) * 190 + (bite - offset);\n\n      code_point = pointer === null ? null :\n        indexCodePointFor(pointer, index('gb18030'));\n\n      if (code_point === null && isASCIIByte(bite))\n        stream.prepend(bite);\n\n      if (code_point === null)\n        return decoderError(fatal);\n\n      return code_point;\n    }\n\n    if (isASCIIByte(bite))\n      return bite;\n\n    if (bite === 0x80)\n      return 0x20AC;\n\n    if (inRange(bite, 0x81, 0xFE)) {\n      gb18030_first = bite;\n      return null;\n    }\n\n    return decoderError(fatal);\n  };\n}\n"], ["PathLimit", "\nfunction PathLimit(parent, conf) {\n  this._parent = parent;\n\n  if (regPathLimit.test(conf)) {\n    conf = regPathLimit.exec(conf);\n\n    this._start = conf[1];\n    this._limit = conf[2];\n  } else {\n    this._start = conf;\n  }\n}\n"], ["initializeWindow", "\nfunction(name, title, url, setupTemplate, setup, showDevTools) {\n\n  const window = new Window(name, title, url, setupTemplate, setup, showDevTools);\n\n  return (window == null || Object.keys(window).length === 0) ? false : window;\n}\n"], ["expandObject", "\nfunction expand(object, delimiter) {\n  var expanded = {};\n\n  delimiter = delimiter || '.';\n\n  forEach(object, function(value, key) {\n    var keys = key.split(delimiter),\n      current = expanded;\n\n    while (keys.length) {\n      key = keys.shift();\n\n      if (!current.hasOwnProperty(key)) {\n        if (keys.length === 0) {\n          current[key] = value;\n        } else {\n          current[key] = {};\n        }\n      }\n\n      current = current[key];\n    }\n  });\n\n  return expanded;\n}\n"], ["readPartials", "\nfunction readPartials(userDir, cwd) {\n  if (cwd) {\n    userDir = path.join(cwd, userDir);\n  } else {\n    userDir = path.join(path.dirname(process.argv[1]), userDir);\n  }\n  partials = {};\n  var filenames = fs.readdirSync(userDir);\n  for (var i = 0; i < filenames.length; i++) {\n    partials[filenames[i].slice(0, -5)] = fs.readFileSync(\n      path.join(userDir, filenames[i]), 'utf8'\n    );\n  }\n  return partials;\n}\n"], ["cacheRemoveKey", "\nfunction(key) {\n  var map = this._getMap(key, false);\n  if (map == null) {\n    return undefined;\n  }\n  var item;\n  if (map == this._objectKeys) {\n    item = key[this._metaDataName];\n    if (item) {\n      key[this._metaDataName] = item.next;\n      if (!item.next) {\n        delete key[this._metaDataName];\n      }\n    }\n  } else if (map != this._otherKeys) {\n    item = map[key];\n  } else {\n    for (var i in map) {\n      if (map.hasOwnProperty(i)) {\n        var elt = map[i];\n        if (key === elt.key) {\n          item = elt;\n          break;\n        }\n      }\n    }\n  }\n  if (item) {\n    var next = item.next;\n    map[item.index] = next;\n    if (!next) {\n      delete map[item.index];\n    }\n    item.key = null;\n    item.next = null;\n    return item.value;\n  } else {\n    return undefined;\n  }\n}\n"], ["startTagInSelectInTable", "\nfunction startTagInSelectInTable(p, token) {\n  const tn = token.tagName;\n\n  if (\n    tn === $.CAPTION ||\n    tn === $.TABLE ||\n    tn === $.TBODY ||\n    tn === $.TFOOT ||\n    tn === $.THEAD ||\n    tn === $.TR ||\n    tn === $.TD ||\n    tn === $.TH\n  ) {\n    p.openElements.popUntilTagNamePopped($.SELECT);\n    p._resetInsertionMode();\n    p._processToken(token);\n  } else {\n    <startTagInSelect>\n    startTagInSelect(p, token);\n    </startTagInSelect>\n  }\n}\n"], "```\n"]