[["getOpenshiftEnvVars", "\nfunction getOpenshiftEnvVars(params){\n  <parseMbaasUrl>\n  var appMbaas = params.appMbaas;\n  var mbaasUrl = _parseMbaasUrl(appMbaas.mbaasUrl);\n  </parseMbaasUrl>\n\n  <setEnvironmentVariables>\n  var appEnvs = {};\n  appEnvs.FH_MBAAS_PROTOCOL = mbaasUrl.protocol;\n  appEnvs.FH_MBAAS_HOST = mbaasUrl.host;\n  appEnvs.FH_MBAAS_ENV_ACCESS_KEY = appMbaas.accessKey;\n  \n  \n  if(appMbaas.isServiceApp){\n    appEnvs.FH_SERVICE_ACCESS_KEY = appMbaas.serviceAccessKey;\n  }\n  </setEnvironmentVariables>\n\n  return appEnvs;\n}\n"], ["getSignedUrl", "\nfunction getSignedUrl(operation, params, callback) {\n    params = AWS.util.copy(params || {});\n    <expiresConfiguration>\n    var expires = params.Expires || 900;\n    </expiresConfiguration>\n\n    <deleteExpiresParameter>\n    delete params.Expires; \n    </deleteExpiresParameter>\n\n    <makeRequest>\n    var request = this.makeRequest(operation, params);\n    </makeRequest>\n\n    <presignRequest>\n    if (callback) {\n      AWS.util.defer(function() {\n        request.presign(expires, callback);\n      });\n    } else {\n      return request.presign(expires, callback);\n    }\n    </presignRequest>\n  }\n"], ["initIframeForUpload", "\nfunction initIframeForUpload(name) {\n  <createElementAndConfigure>\n  var iframe = qq.toElement(\"<iframe src='javascript:false;' name='\" + name + \"' />\");\n\n  iframe.setAttribute(\"id\", name);\n\n  iframe.style.display = \"none\";\n  </createElementAndConfigure>\n\n  <appendToDocument>\n  document.body.appendChild(iframe);\n  </appendToDocument>\n\n  return iframe;\n}\n"], ["anonymousFunctionCoordinates", "\nfunction (x, y, w, h) {\n  <setCoordinates>\n\tthis.__coord = [x * this.__tile + this.__padding[0] + this.__trim[0],\n\t\t\t\t\ty * this.__tileh + this.__padding[1] + this.__trim[1],\n\t\t\t\t\tthis.__trim[2] || w * this.__tile || this.__tile,\n\t\t\t\t\tthis.__trim[3] || h * this.__tileh || this.__tileh];\n  </setCoordinates>\n\n  <triggerChangeEvent>\n\tthis.trigger(\"Change\");\n  </triggerChangeEvent>\n\n\treturn this;\n}\n"], ["validateEndpointData", "\nfunction validateEndpointData(\n  data,\n  { prettyErrorMessage = 'invalid response data', includeKeys = false } = {}\n) {\n  <validateDataWithSchema>\n  return validate(\n    {\n      ErrorClass: InvalidResponse,\n      prettyErrorMessage,\n      includeKeys,\n      traceErrorMessage: 'Response did not match schema',\n      traceSuccessMessage: 'Response after validation',\n      allowAndStripUnknownKeys: false,\n    },\n    data,\n    endpointSchema\n  )\n  </validateDataWithSchema>\n}\n"], ["checkIgnore", "\nfunction checkIgnore (predicate, name, value, defaultPredicate) {\n  <evaluateValuePresence>\n  if (!value) {\n    return true\n  }\n  </evaluateValuePresence>\n\n  <evaluatePredicate>\n  const check = predicate || defaultPredicate\n  if (!check) {\n    return false\n  }\n  return check(name, value, defaultPredicate)\n  </evaluatePredicate>\n}\n"], ["constructUserObject", "\nfunction(messageContent) {\n  <mapMessageContentToUser>\n  var user = {\n      id: messageContent.id,\n      name: messageContent.name,\n      email: messageContent.email,\n      cellphoneNumber: messageContent.cellphoneNumber,\n      image: messageContent.image,\n      lastSeen: messageContent.lastSeen,\n      sendEnable: messageContent.sendEnable,\n      receiveEnable: messageContent.receiveEnable\n  };\n  </mapMessageContentToUser>\n\n  return user;\n}\n"], ["initOptions", "\nfunction initOptions(toOptions, fromOptions) {\n    <initializeAlignmentOptions>\n    if (typeof fromOptions.align === \"object\") {\n        toOptions.align = initOptionProperty({}, fromOptions.align);\n        toOptions.align.on = fromOptions.align.on || \"colon\";\n        toOptions.align.mode = fromOptions.align.mode || \"strict\";\n    </initializeAlignmentOptions>\n\n    <initializeMultiLineAndSingleLineOptions>\n    toOptions.multiLine = initOptionProperty({}, (fromOptions.multiLine || fromOptions));\n    toOptions.singleLine = initOptionProperty({}, (fromOptions.singleLine || fromOptions));\n    </initializeMultiLineAndSingleLineOptions>\n\n    <additionalAlignmentOptionsBasedOnMultiLine>\n    if (toOptions.multiLine.align) {\n        toOptions.align = {\n            on: toOptions.multiLine.align.on,\n            mode: toOptions.multiLine.align.mode || toOptions.multiLine.mode,\n            beforeColon: toOptions.multiLine.align.beforeColon,\n            afterColon: toOptions.multiLine.align.afterColon\n        };\n    }\n    </additionalAlignmentOptionsBasedOnMultiLine>\n\n    return toOptions;\n}\n"], ["PromiseDecorator", "\nfunction PromiseDecorator(cache) {\n  <callBaseDecorator>\n  BaseDecorator.call(this, cache);\n  </callBaseDecorator>\n\n  <promisifyCacheMethods>\n  this.get = promisify(this.get.bind(this));\n  this.set = promisify(this.set.bind(this));\n  this.del = promisify(this.del.bind(this));\n  </promisifyCacheMethods>\n}\n"], ["TrackPlayedSchema", "\nfunction TrackPlayedSchema() {\n  <createTrackAndAlbumPrototypes>\n  this.track = Object.create(Track.prototype);  \n  this.album = Object.create(Album.prototype);\n  </createTrackAndAlbumPrototypes>\n}\n"], ""]