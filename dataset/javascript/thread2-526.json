[["render", "\nfunction render(template, vars) {\n    var rendered = template;\n\n    for (var key in vars) {\n        if (vars.hasOwnProperty(key)) {\n            var val = vars[key];\n            var regExpString = '\\\\{' + key + '\\\\}';\n            var regExp = new RegExp(regExpString, 'g');\n\n            rendered = rendered.replace(regExp, val);\n        }\n    }\n\n    return rendered;\n}\n"], ["cacheService", "\nfunction cacheService(cacheServiceConfig, cacheModules) {\n  var self = this;\n\n  <cacheService_get>\n  self.get = function(key, cb){ ... };\n  </cacheService_get>\n\n  <cacheService_mget>\n  self.mget = function(keys, cb){ ... };\n  </cacheService_mget>\n\n  <cacheService_set>\n  self.set = function(){ ... };\n  </cacheService_set>\n\n  <cacheService_mset>\n  self.mset = function(){ ... };\n  </cacheService_mset>\n\n  <cacheService_del>\n  self.del = function(keys, cb){ ... };\n  </cacheService_del>\n\n  <cacheService_flush>\n  self.flush = function(cb){ ... };\n  </cacheService_flush>\n\n  <cacheService_init>\n  function init(){ ... }\n  </cacheService_init>\n\n  <cacheService_checkCacheResponse>\n  function checkCacheResponse(key, err, result, type, cacheIndex){ ... }\n  </cacheService_checkCacheResponse>\n\n  <cacheService_writeToVolatileCaches>\n  function writeToVolatileCaches(currentCacheIndex, key, value){ ... }\n  </cacheService_writeToVolatileCaches>\n\n  <cacheService_Exception>\n  function Exception(name, message) { ... }\n  </cacheService_Exception>\n\n  <cacheService_log>\n  function log(isError, message, data){ ... }\n  </cacheService_log>\n\n  function noop(){}\n\n  init();\n}\n"], ["parseStatement", "\nfunction parseStatement() { ... }\n"], ["qname", "\nfunction qname() { ... }\n"], ["anonymous_multiple_file_operations", "\nfunction(a,dest){ ... }\n"], ["anonymous_return_statement", "\nfunction() { ... }\n"], ["extractTravelPlan", "\nfunction extractTravelPlan(data) { ... }\n<extractTravelPlan_processing>\n  let plans = []\n  let getPlan = (from, to, departure, arrival) => { ... }\n</extractTravelPlan_processing>\n\n<extractTravelPlan_ticketMapping>\n  let mkticket = (ticket, travelClass) => { ... }\n</extractTravelPlan_ticketMapping>\n\n  secondClass.map(ticket => mkticket(ticket, 2))\n  firstClass.map(ticket => mkticket(ticket, 1))\n"], ["add", "\nfunction add(this_, part, value){ ... }\n"], ["anonymous_imageProcessing", "\nfunction() { ... }\n"], ["__webpack_require__", "\nfunction(module, exports, __webpack_require__) { ... }\n<__webpack_require__createColdObservable>\n  TestScheduler.prototype.createColdObservable = function (marbles, values, error) { ... };\n</__webpack_require__createColdObservable>\n\n<__webpack_require__expectObservable>\n  TestScheduler.prototype.expectObservable = function (observable, unsubscriptionMarbles) { ... };\n</__webpack_require__expectObservable>\n\n<__webpack_require__parseMarblesAsSubscriptions>\n  TestScheduler.parseMarblesAsSubscriptions = function (marbles) { ... };\n</__webpack_require__parseMarblesAsSubscriptions>\n\n<__webpack_require__parseMarbles>\n  TestScheduler.parseMarbles = function (marbles, values, errorValue, materializeInnerObservables) { ... };\n</__webpack_require__parseMarbles>\n"], ""]